package UI;

import java.awt.Color;
import java.awt.Dimension;
import static java.awt.Frame.ICONIFIED;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import ClassHandling.conjdbc;
import com.mysql.cj.xdevapi.Table;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.Query.lt;
import javax.swing.JPanel;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author amndw
 */
public class home extends javax.swing.JFrame {

    //declaration
    Color panedefault;
    Color paneClick;

    /**
     * Creates new form home
     */
    public home() {
        initComponents();
        this.setExtendedState(home.MAXIMIZED_BOTH);
        lbl_search_teachername.setVisible(false);
        txt_searchteacher_report.setVisible(false);
        txt_searchsubject_report.setVisible(false);
        lbl_search_subject.setVisible(false);
        lbl_search_inv.setVisible(false);
        txt_search_inv.setVisible(false);
        txt_studsearch_fees_report.setVisible(false);
        cb_report_fees.setVisible(false);
        lp7.setVisible(false);
        dtest.setVisible(false);
        //this.setLocationRelativeTo(null);   //jframe to center
        //this.setBackground (new Color (0,0,0,0));       //jframe to transparent background
        {
            panedefault = new Color(255, 255, 255);
            paneClick = new Color(255, 0, 255);

            lp1.setBackground(paneClick);
            lp2.setBackground(panedefault);
            lp3.setBackground(panedefault);
            lp4.setBackground(panedefault);
            lp5.setBackground(panedefault);
            lp6.setBackground(panedefault);
        }
    }

    void makePanelVisible(JPanel panel) {
        dashboard.setVisible(false);
        student.setVisible(false);
        teacher.setVisible(false);
        subject.setVisible(false);
        report.setVisible(false);
        fees.setVisible(false);
        addup_student.setVisible(false);
        addup_teacher.setVisible(false);
        addup_subject.setVisible(false);
        addup_fees.setVisible(false);
        //addup_test.setVisible(false);test.setVisible(false);
        panel.setVisible(true);
        panel.validate();
    }

    void makeColorVisible(JPanel panel) {
        lp1.setBackground(panedefault);
        lp2.setBackground(panedefault);
        lp3.setBackground(panedefault);
        lp4.setBackground(panedefault);
        lp5.setBackground(panedefault);
        lp6.setBackground(panedefault);
        //lp7.setBackground(panedefault);
        panel.setBackground(paneClick);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender_rbgrp = new javax.swing.ButtonGroup();
        report_rbgrp = new javax.swing.ButtonGroup();
        paid_rbgrp = new javax.swing.ButtonGroup();
        top = new keeptoo.KGradientPanel();
        close_panel = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        restore = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_logo = new javax.swing.JLabel();
        log_out = new javax.swing.JLabel();
        left = new keeptoo.KGradientPanel();
        lp1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lp2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lp3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        lp4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        lp5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        lp6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        lp7 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jlayered_center = new javax.swing.JLayeredPane();
        dashboard = new keeptoo.KGradientPanel();
        one = new javax.swing.JPanel();
        dstudent = new keeptoo.KGradientPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dreport = new keeptoo.KGradientPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        two = new javax.swing.JPanel();
        dteacher = new keeptoo.KGradientPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        dfees = new keeptoo.KGradientPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        three = new javax.swing.JPanel();
        dsubject = new keeptoo.KGradientPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        dtest = new keeptoo.KGradientPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        student = new keeptoo.KGradientPanel();
        addstudent_pane = new keeptoo.KGradientPanel();
        lbl_studenticon = new javax.swing.JLabel();
        lbl_addstudent = new javax.swing.JLabel();
        updatestud_pane = new keeptoo.KGradientPanel();
        lbl_updatestudent = new javax.swing.JLabel();
        updatestudent_pane = new javax.swing.JButton();
        deletestud_pane = new keeptoo.KGradientPanel();
        lbl_delstudent = new javax.swing.JLabel();
        btn_delete_student = new javax.swing.JButton();
        lbl_studrollno = new javax.swing.JLabel();
        txt_student = new javax.swing.JTextField();
        studentScrollPane = new javax.swing.JScrollPane();
        student_table = new javax.swing.JTable();
        btn_refresh_student = new javax.swing.JButton();
        lbl_subject1 = new javax.swing.JLabel();
        addup_student = new keeptoo.KGradientPanel();
        lbl_addupstud = new javax.swing.JLabel();
        backtostudent = new javax.swing.JLabel();
        txt_sroll = new javax.swing.JTextField();
        lbl_sroll = new javax.swing.JLabel();
        txt_sname = new javax.swing.JTextField();
        lbl_sname = new javax.swing.JLabel();
        lbl_sclass = new javax.swing.JLabel();
        lbl_sdoa = new javax.swing.JLabel();
        cb_sclass = new javax.swing.JComboBox<>();
        txt_sage = new javax.swing.JTextField();
        lbl_sage = new javax.swing.JLabel();
        txt_sphone = new javax.swing.JTextField();
        lbl_sphone = new javax.swing.JLabel();
        btn_student_clear = new keeptoo.KButton();
        btn_student_add = new keeptoo.KButton();
        btn_student_update = new keeptoo.KButton();
        lbl_sclass1 = new javax.swing.JLabel();
        rb_smale = new javax.swing.JRadioButton();
        rb_sfemale = new javax.swing.JRadioButton();
        jdate_sdoa = new org.jdesktop.swingx.JXDatePicker();
        teacher = new keeptoo.KGradientPanel();
        addfaculty_pane = new keeptoo.KGradientPanel();
        lbl_studenticon2 = new javax.swing.JLabel();
        lbl_addstudent2 = new javax.swing.JLabel();
        updatestud_pane1 = new keeptoo.KGradientPanel();
        lbl_updatestudent1 = new javax.swing.JLabel();
        updatefaculty_pane = new javax.swing.JButton();
        deletestud_pane1 = new keeptoo.KGradientPanel();
        lbl_delstudent1 = new javax.swing.JLabel();
        btn_delete_faculty = new javax.swing.JButton();
        lbl_studrollno1 = new javax.swing.JLabel();
        txt_teacher = new javax.swing.JTextField();
        studentScrollPane2 = new javax.swing.JScrollPane();
        teacher_table = new javax.swing.JTable();
        btn_refresh_teacher = new javax.swing.JButton();
        lbl_subject2 = new javax.swing.JLabel();
        addup_teacher = new keeptoo.KGradientPanel();
        lbl_addupstud1 = new javax.swing.JLabel();
        backtoteacher = new javax.swing.JLabel();
        txt_tid = new javax.swing.JTextField();
        lbl_sroll1 = new javax.swing.JLabel();
        txt_tname = new javax.swing.JTextField();
        lbl_sname1 = new javax.swing.JLabel();
        lbl_sdoa1 = new javax.swing.JLabel();
        txt_tage = new javax.swing.JTextField();
        lbl_sage1 = new javax.swing.JLabel();
        txt_tphone = new javax.swing.JTextField();
        lbl_sphone1 = new javax.swing.JLabel();
        btn_teacher_clear = new keeptoo.KButton();
        btn_teacher_add = new keeptoo.KButton();
        btn_teacher_update = new keeptoo.KButton();
        lbl_sclass3 = new javax.swing.JLabel();
        rb_tmale = new javax.swing.JRadioButton();
        rb_tfemale = new javax.swing.JRadioButton();
        jdate_tdoj = new org.jdesktop.swingx.JXDatePicker();
        lbl_sname2 = new javax.swing.JLabel();
        txt_tsubject = new javax.swing.JTextField();
        lbl_sname3 = new javax.swing.JLabel();
        txt_tqual = new javax.swing.JTextField();
        subject = new keeptoo.KGradientPanel();
        lbl_subject = new javax.swing.JLabel();
        addsubject_pane = new keeptoo.KGradientPanel();
        lbl_subjectico = new javax.swing.JLabel();
        lbl_addsubject = new javax.swing.JLabel();
        updatesub_pane = new keeptoo.KGradientPanel();
        lbl_updatesubject = new javax.swing.JLabel();
        updatesubject_pane = new javax.swing.JButton();
        delsub_pane = new keeptoo.KGradientPanel();
        lbl_delsubject = new javax.swing.JLabel();
        delsubject_pane = new javax.swing.JButton();
        lbl_studrollno2 = new javax.swing.JLabel();
        txt_subject = new javax.swing.JTextField();
        SubjectScrollPane = new javax.swing.JScrollPane();
        subject_table = new javax.swing.JTable();
        btn_refresh_subject = new javax.swing.JButton();
        addup_subject = new keeptoo.KGradientPanel();
        lbl_addupstud2 = new javax.swing.JLabel();
        backtosubject = new javax.swing.JLabel();
        lbl_sroll2 = new javax.swing.JLabel();
        txt_subject1 = new javax.swing.JTextField();
        lbl_sname4 = new javax.swing.JLabel();
        btn_sub_clear = new keeptoo.KButton();
        btn_sub_add = new keeptoo.KButton();
        btn_sub_update = new keeptoo.KButton();
        lbl_sname5 = new javax.swing.JLabel();
        txt_subject2 = new javax.swing.JTextField();
        lbl_sid = new javax.swing.JLabel();
        txt_subject3 = new javax.swing.JTextField();
        lbl_sname7 = new javax.swing.JLabel();
        lbl_sname8 = new javax.swing.JLabel();
        txt_subject4 = new javax.swing.JTextField();
        txt_subject5 = new javax.swing.JTextField();
        lbl_sname9 = new javax.swing.JLabel();
        lbl_sname10 = new javax.swing.JLabel();
        txt_subject6 = new javax.swing.JTextField();
        txt_subject7 = new javax.swing.JTextField();
        lbl_sname11 = new javax.swing.JLabel();
        lbl_sname12 = new javax.swing.JLabel();
        txt_subject8 = new javax.swing.JTextField();
        lbl_sroll4 = new javax.swing.JLabel();
        cb_subjmedium = new javax.swing.JComboBox<>();
        cb_subjclass = new javax.swing.JComboBox<>();
        lbl_sroll10 = new javax.swing.JLabel();
        txt_sid = new javax.swing.JTextField();
        lbl_sroll3 = new javax.swing.JLabel();
        report = new keeptoo.KGradientPanel();
        txt_searchname_report = new javax.swing.JTextField();
        studentScrollPane1 = new javax.swing.JScrollPane();
        report_table = new javax.swing.JTable();
        lbl_search_rollname = new javax.swing.JLabel();
        cb_reportclass = new javax.swing.JComboBox<>();
        rb_invoice_report = new javax.swing.JRadioButton();
        rb_teacher_report = new javax.swing.JRadioButton();
        rb_student_report = new javax.swing.JRadioButton();
        rb_subject_report = new javax.swing.JRadioButton();
        rb_fees_report = new javax.swing.JRadioButton();
        lbl_selectclass_report = new javax.swing.JLabel();
        lbl_search_teachername = new javax.swing.JLabel();
        cb_report_fees = new javax.swing.JComboBox<>();
        txt_searchteacher_report = new javax.swing.JTextField();
        txt_studsearch_fees_report = new javax.swing.JTextField();
        lbl_search_subject = new javax.swing.JLabel();
        txt_searchsubject_report = new javax.swing.JTextField();
        lbl_search_inv = new javax.swing.JLabel();
        txt_search_inv = new javax.swing.JTextField();
        rb_advance_invoice_report = new javax.swing.JRadioButton();
        lbl_subject3 = new javax.swing.JLabel();
        export_excel = new javax.swing.JButton();
        fees = new keeptoo.KGradientPanel();
        make_receipt_pane = new keeptoo.KGradientPanel();
        lbl_addstudent4 = new javax.swing.JLabel();
        btn_pay_feespane = new javax.swing.JButton();
        add_feedetails_pane = new keeptoo.KGradientPanel();
        lbl_updatestudent3 = new javax.swing.JLabel();
        btn_add_feesdetail = new javax.swing.JButton();
        deletefee_pane = new keeptoo.KGradientPanel();
        lbl_delstudent3 = new javax.swing.JLabel();
        btn_delete_fees = new javax.swing.JButton();
        lbl_studrollno3 = new javax.swing.JLabel();
        txt_fees_rollname = new javax.swing.JTextField();
        fees_table_scroll = new javax.swing.JScrollPane();
        fees_table = new javax.swing.JTable();
        btn_refresh_fees = new javax.swing.JButton();
        updatefee_pane = new keeptoo.KGradientPanel();
        lbl_updatestudent4 = new javax.swing.JLabel();
        btn_update_feespane = new javax.swing.JButton();
        lbl_subject4 = new javax.swing.JLabel();
        addup_fees = new keeptoo.KGradientPanel();
        lbl_addupstud3 = new javax.swing.JLabel();
        backtosubject1 = new javax.swing.JLabel();
        lbl_sroll5 = new javax.swing.JLabel();
        txt_famount = new javax.swing.JTextField();
        lbl_sname6 = new javax.swing.JLabel();
        btn_fees_clear = new keeptoo.KButton();
        btn_make_payment = new keeptoo.KButton();
        btn_update_fees = new keeptoo.KButton();
        txt_fname = new javax.swing.JTextField();
        lbl_sroll6 = new javax.swing.JLabel();
        lbl_sroll7 = new javax.swing.JLabel();
        cb_fees_class = new javax.swing.JComboBox<>();
        lbl_sroll8 = new javax.swing.JLabel();
        txt_froll = new javax.swing.JTextField();
        lbl_selfees_month = new javax.swing.JLabel();
        rb_notpaid_fees = new javax.swing.JRadioButton();
        rb_paid_fees = new javax.swing.JRadioButton();
        btn_add_details = new keeptoo.KButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtarea_receipt = new javax.swing.JTextArea();
        jch_jan = new javax.swing.JCheckBox();
        jch_feb = new javax.swing.JCheckBox();
        txt_ftotal = new javax.swing.JTextField();
        lbl_total = new javax.swing.JLabel();
        calculate_total_fees = new javax.swing.JButton();
        jch_mar = new javax.swing.JCheckBox();
        jch_apr = new javax.swing.JCheckBox();
        jch_jun = new javax.swing.JCheckBox();
        jch_may = new javax.swing.JCheckBox();
        jch_sep = new javax.swing.JCheckBox();
        jch_oct = new javax.swing.JCheckBox();
        jch_dec = new javax.swing.JCheckBox();
        jch_nov = new javax.swing.JCheckBox();
        jch_jul = new javax.swing.JCheckBox();
        jch_aug = new javax.swing.JCheckBox();
        cb_fees_month = new javax.swing.JComboBox<>();
        btn_print_fee_receipt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(1200, 500));
        setUndecorated(true);

        top.setkBorderRadius(0);
        top.setkEndColor(new java.awt.Color(255, 255, 255));
        top.setkGradientFocus(1000);
        top.setkStartColor(new java.awt.Color(255, 102, 255));
        top.setPreferredSize(new java.awt.Dimension(380, 50));
        top.setLayout(new java.awt.BorderLayout());

        close_panel.setOpaque(false);
        close_panel.setPreferredSize(new java.awt.Dimension(110, 40));
        close_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/close.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        close_panel.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 0, -1, -1));

        min.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/min.png"))); // NOI18N
        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
        });
        close_panel.add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, -1, -1));

        restore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/restore.png"))); // NOI18N
        restore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                restoreMouseClicked(evt);
            }
        });
        close_panel.add(restore, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, -1));

        top.add(close_panel, java.awt.BorderLayout.LINE_END);

        header.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        header.setOpaque(false);
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 2, 18)); // NOI18N
        jLabel9.setText("& ATAD Co-Operation");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 179, -1));

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 2, 18)); // NOI18N
        jLabel7.setText("powered by :     ELITE CLASSES ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        lbl_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/connect.png"))); // NOI18N

        log_out.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        log_out.setForeground(new java.awt.Color(230, 0, 18));
        log_out.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/log-out.png"))); // NOI18N
        log_out.setText("Log Out");
        log_out.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                log_outMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161)
                .addComponent(lbl_logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(log_out)
                .addGap(35, 35, 35))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(headerLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(log_out)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        top.add(header, java.awt.BorderLayout.CENTER);

        getContentPane().add(top, java.awt.BorderLayout.PAGE_START);

        left.setkBorderRadius(0);
        left.setkEndColor(new java.awt.Color(255, 255, 255));
        left.setkGradientFocus(600);
        left.setkStartColor(new java.awt.Color(255, 102, 255));
        left.setMaximumSize(new java.awt.Dimension(300, 1080));
        left.setMinimumSize(new java.awt.Dimension(200, 720));
        left.setPreferredSize(new java.awt.Dimension(220, 720));

        lp1.setBackground(new java.awt.Color(255, 255, 255));
        lp1.setForeground(new java.awt.Color(255, 255, 255));
        lp1.setMinimumSize(new java.awt.Dimension(200, 50));
        lp1.setPreferredSize(new java.awt.Dimension(220, 60));
        lp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lp1MousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Dashboard");

        javax.swing.GroupLayout lp1Layout = new javax.swing.GroupLayout(lp1);
        lp1.setLayout(lp1Layout);
        lp1Layout.setHorizontalGroup(
            lp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lp1Layout.setVerticalGroup(
            lp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lp1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        lp2.setBackground(new java.awt.Color(255, 255, 255));
        lp2.setForeground(new java.awt.Color(255, 255, 255));
        lp2.setMinimumSize(new java.awt.Dimension(200, 50));
        lp2.setPreferredSize(new java.awt.Dimension(220, 60));
        lp2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                studentpane(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Student");

        javax.swing.GroupLayout lp2Layout = new javax.swing.GroupLayout(lp2);
        lp2.setLayout(lp2Layout);
        lp2Layout.setHorizontalGroup(
            lp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lp2Layout.setVerticalGroup(
            lp2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lp2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
        );

        lp3.setBackground(new java.awt.Color(255, 255, 255));
        lp3.setForeground(new java.awt.Color(255, 255, 255));
        lp3.setMinimumSize(new java.awt.Dimension(200, 50));
        lp3.setPreferredSize(new java.awt.Dimension(220, 60));
        lp3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                teacherpane(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Teacher");

        javax.swing.GroupLayout lp3Layout = new javax.swing.GroupLayout(lp3);
        lp3.setLayout(lp3Layout);
        lp3Layout.setHorizontalGroup(
            lp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lp3Layout.setVerticalGroup(
            lp3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lp3Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        lp4.setBackground(new java.awt.Color(255, 255, 255));
        lp4.setForeground(new java.awt.Color(255, 255, 255));
        lp4.setMinimumSize(new java.awt.Dimension(200, 50));
        lp4.setPreferredSize(new java.awt.Dimension(220, 60));
        lp4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                subjectpane(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Subject");

        javax.swing.GroupLayout lp4Layout = new javax.swing.GroupLayout(lp4);
        lp4.setLayout(lp4Layout);
        lp4Layout.setHorizontalGroup(
            lp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lp4Layout.setVerticalGroup(
            lp4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lp4Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        lp5.setBackground(new java.awt.Color(255, 255, 255));
        lp5.setForeground(new java.awt.Color(255, 255, 255));
        lp5.setMinimumSize(new java.awt.Dimension(200, 50));
        lp5.setPreferredSize(new java.awt.Dimension(220, 60));
        lp5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                reportpane(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Report");

        javax.swing.GroupLayout lp5Layout = new javax.swing.GroupLayout(lp5);
        lp5.setLayout(lp5Layout);
        lp5Layout.setHorizontalGroup(
            lp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lp5Layout.setVerticalGroup(
            lp5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lp5Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addContainerGap())
        );

        lp6.setBackground(new java.awt.Color(255, 255, 255));
        lp6.setForeground(new java.awt.Color(255, 255, 255));
        lp6.setMinimumSize(new java.awt.Dimension(200, 50));
        lp6.setPreferredSize(new java.awt.Dimension(220, 60));
        lp6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                feespane(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Fees");

        javax.swing.GroupLayout lp6Layout = new javax.swing.GroupLayout(lp6);
        lp6.setLayout(lp6Layout);
        lp6Layout.setHorizontalGroup(
            lp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );
        lp6Layout.setVerticalGroup(
            lp6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lp6Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addContainerGap())
        );

        lp7.setBackground(new java.awt.Color(255, 255, 255));
        lp7.setForeground(new java.awt.Color(255, 255, 255));
        lp7.setMinimumSize(new java.awt.Dimension(200, 50));
        lp7.setPreferredSize(new java.awt.Dimension(220, 60));

        jLabel18.setFont(new java.awt.Font("Berlin Sans FB", 0, 30)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Test");

        javax.swing.GroupLayout lp7Layout = new javax.swing.GroupLayout(lp7);
        lp7.setLayout(lp7Layout);
        lp7Layout.setHorizontalGroup(
            lp7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );
        lp7Layout.setVerticalGroup(
            lp7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lp7Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addContainerGap())
        );

        javax.swing.GroupLayout leftLayout = new javax.swing.GroupLayout(left);
        left.setLayout(leftLayout);
        leftLayout.setHorizontalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lp1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lp3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lp4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lp5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(leftLayout.createSequentialGroup()
                .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lp6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lp7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        leftLayout.setVerticalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lp5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lp6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(lp7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        getContentPane().add(left, java.awt.BorderLayout.LINE_START);

        jlayered_center.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jlayered_center.setMinimumSize(new java.awt.Dimension(1317, 720));
        jlayered_center.setPreferredSize(new java.awt.Dimension(1317, 1317));
        jlayered_center.setLayout(new java.awt.CardLayout());

        dashboard.setkBorderRadius(0);
        dashboard.setkEndColor(new java.awt.Color(58, 109, 196));
        dashboard.setkGradientFocus(1500);
        dashboard.setkStartColor(new java.awt.Color(255, 255, 255));
        dashboard.setMaximumSize(new java.awt.Dimension(1920, 1080));
        dashboard.setMinimumSize(new java.awt.Dimension(1150, 600));
        dashboard.setPreferredSize(new java.awt.Dimension(1317, 720));
        dashboard.setLayout(new javax.swing.BoxLayout(dashboard, javax.swing.BoxLayout.LINE_AXIS));

        one.setOpaque(false);

        dstudent.setkBorderRadius(30);
        dstudent.setkEndColor(new java.awt.Color(255, 255, 255));
        dstudent.setkStartColor(new java.awt.Color(255, 255, 255));
        dstudent.setMinimumSize(new java.awt.Dimension(250, 250));
        dstudent.setOpaque(false);
        dstudent.setPreferredSize(new java.awt.Dimension(250, 250));
        dstudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dstudentMousePressed(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dashboard/student150px.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 34)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Student");

        javax.swing.GroupLayout dstudentLayout = new javax.swing.GroupLayout(dstudent);
        dstudent.setLayout(dstudentLayout);
        dstudentLayout.setHorizontalGroup(
            dstudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dstudentLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(dstudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        dstudentLayout.setVerticalGroup(
            dstudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dstudentLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        dreport.setkBorderRadius(30);
        dreport.setkEndColor(new java.awt.Color(255, 255, 255));
        dreport.setkStartColor(new java.awt.Color(255, 255, 255));
        dreport.setMinimumSize(new java.awt.Dimension(250, 250));
        dreport.setOpaque(false);
        dreport.setPreferredSize(new java.awt.Dimension(250, 250));
        dreport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dreportMousePressed(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dashboard/report150.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 0, 34)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Report");

        javax.swing.GroupLayout dreportLayout = new javax.swing.GroupLayout(dreport);
        dreport.setLayout(dreportLayout);
        dreportLayout.setHorizontalGroup(
            dreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dreportLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(dreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        dreportLayout.setVerticalGroup(
            dreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dreportLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout oneLayout = new javax.swing.GroupLayout(one);
        one.setLayout(oneLayout);
        oneLayout.setHorizontalGroup(
            oneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, oneLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(oneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dstudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104))
        );
        oneLayout.setVerticalGroup(
            oneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, oneLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(dstudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(dreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        dashboard.add(one);

        two.setOpaque(false);

        dteacher.setkBorderRadius(30);
        dteacher.setkEndColor(new java.awt.Color(255, 255, 255));
        dteacher.setkStartColor(new java.awt.Color(255, 255, 255));
        dteacher.setMinimumSize(new java.awt.Dimension(250, 250));
        dteacher.setOpaque(false);
        dteacher.setPreferredSize(new java.awt.Dimension(250, 250));
        dteacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dteacherMousePressed(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dashboard/teacher150.png"))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Berlin Sans FB", 0, 34)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Teacher");

        javax.swing.GroupLayout dteacherLayout = new javax.swing.GroupLayout(dteacher);
        dteacher.setLayout(dteacherLayout);
        dteacherLayout.setHorizontalGroup(
            dteacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dteacherLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(dteacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        dteacherLayout.setVerticalGroup(
            dteacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dteacherLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        dfees.setkBorderRadius(30);
        dfees.setkEndColor(new java.awt.Color(255, 255, 255));
        dfees.setkStartColor(new java.awt.Color(255, 255, 255));
        dfees.setMinimumSize(new java.awt.Dimension(250, 250));
        dfees.setOpaque(false);
        dfees.setPreferredSize(new java.awt.Dimension(250, 250));
        dfees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dfeesMousePressed(evt);
            }
        });

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dashboard/fees150.png"))); // NOI18N

        jLabel22.setFont(new java.awt.Font("Berlin Sans FB", 0, 34)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Fees");

        javax.swing.GroupLayout dfeesLayout = new javax.swing.GroupLayout(dfees);
        dfees.setLayout(dfeesLayout);
        dfeesLayout.setHorizontalGroup(
            dfeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dfeesLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(dfeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        dfeesLayout.setVerticalGroup(
            dfeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dfeesLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout twoLayout = new javax.swing.GroupLayout(two);
        two.setLayout(twoLayout);
        twoLayout.setHorizontalGroup(
            twoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, twoLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(twoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dteacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dfees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        twoLayout.setVerticalGroup(
            twoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, twoLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(dteacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(dfees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        dashboard.add(two);

        three.setOpaque(false);

        dsubject.setkBorderRadius(30);
        dsubject.setkEndColor(new java.awt.Color(255, 255, 255));
        dsubject.setkStartColor(new java.awt.Color(255, 255, 255));
        dsubject.setMinimumSize(new java.awt.Dimension(250, 250));
        dsubject.setOpaque(false);
        dsubject.setPreferredSize(new java.awt.Dimension(250, 250));
        dsubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dsubjectMousePressed(evt);
            }
        });

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dashboard/subject150.png"))); // NOI18N

        jLabel26.setFont(new java.awt.Font("Berlin Sans FB", 0, 34)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Subject");

        javax.swing.GroupLayout dsubjectLayout = new javax.swing.GroupLayout(dsubject);
        dsubject.setLayout(dsubjectLayout);
        dsubjectLayout.setHorizontalGroup(
            dsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsubjectLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(dsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        dsubjectLayout.setVerticalGroup(
            dsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsubjectLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        dtest.setkBorderRadius(30);
        dtest.setkEndColor(new java.awt.Color(255, 255, 255));
        dtest.setkStartColor(new java.awt.Color(255, 255, 255));
        dtest.setMinimumSize(new java.awt.Dimension(250, 250));
        dtest.setOpaque(false);
        dtest.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/dashboard/test150.png"))); // NOI18N

        jLabel28.setFont(new java.awt.Font("Berlin Sans FB", 0, 34)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Test");

        javax.swing.GroupLayout dtestLayout = new javax.swing.GroupLayout(dtest);
        dtest.setLayout(dtestLayout);
        dtestLayout.setHorizontalGroup(
            dtestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dtestLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(dtestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        dtestLayout.setVerticalGroup(
            dtestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dtestLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout threeLayout = new javax.swing.GroupLayout(three);
        three.setLayout(threeLayout);
        threeLayout.setHorizontalGroup(
            threeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, threeLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(threeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dsubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
        );
        threeLayout.setVerticalGroup(
            threeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, threeLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(dsubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(dtest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        dashboard.add(three);

        jlayered_center.add(dashboard, "card6");

        student.setkBorderRadius(0);
        student.setkEndColor(new java.awt.Color(58, 109, 196));
        student.setkGradientFocus(1500);
        student.setkStartColor(new java.awt.Color(255, 255, 255));
        student.setMaximumSize(new java.awt.Dimension(1920, 1080));
        student.setMinimumSize(new java.awt.Dimension(1150, 600));
        student.setPreferredSize(new java.awt.Dimension(1317, 720));
        student.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addstudent_pane.setkBorderRadius(20);
        addstudent_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        addstudent_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        addstudent_pane.setOpaque(false);
        addstudent_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addstudent_paneMousePressed(evt);
            }
        });

        lbl_studenticon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/addstudent100.png"))); // NOI18N

        lbl_addstudent.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_addstudent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_addstudent.setText("Add Student");
        lbl_addstudent.setToolTipText("");
        lbl_addstudent.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout addstudent_paneLayout = new javax.swing.GroupLayout(addstudent_pane);
        addstudent_pane.setLayout(addstudent_paneLayout);
        addstudent_paneLayout.setHorizontalGroup(
            addstudent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addstudent_paneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbl_studenticon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lbl_addstudent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addstudent_paneLayout.setVerticalGroup(
            addstudent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addstudent_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_studenticon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_addstudent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        student.add(addstudent_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 151, 144));

        updatestud_pane.setkBorderRadius(20);
        updatestud_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        updatestud_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        updatestud_pane.setOpaque(false);

        lbl_updatestudent.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_updatestudent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_updatestudent.setText("Update Student");
        lbl_updatestudent.setToolTipText("");
        lbl_updatestudent.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        updatestudent_pane.setBackground(new java.awt.Color(255, 255, 255));
        updatestudent_pane.setForeground(new java.awt.Color(255, 255, 255));
        updatestudent_pane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/updatestuent100.png"))); // NOI18N
        updatestudent_pane.setToolTipText("");
        updatestudent_pane.setBorder(null);
        updatestudent_pane.setContentAreaFilled(false);
        updatestudent_pane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updatestudent_pane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatestudent_paneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatestud_paneLayout = new javax.swing.GroupLayout(updatestud_pane);
        updatestud_pane.setLayout(updatestud_paneLayout);
        updatestud_paneLayout.setHorizontalGroup(
            updatestud_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_updatestudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(updatestud_paneLayout.createSequentialGroup()
                .addComponent(updatestudent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        updatestud_paneLayout.setVerticalGroup(
            updatestud_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatestud_paneLayout.createSequentialGroup()
                .addComponent(updatestudent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_updatestudent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        student.add(updatestud_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 151, 144));

        deletestud_pane.setkBorderRadius(20);
        deletestud_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        deletestud_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        deletestud_pane.setOpaque(false);

        lbl_delstudent.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_delstudent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_delstudent.setText("Delete Student");
        lbl_delstudent.setToolTipText("");
        lbl_delstudent.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_delete_student.setBackground(new java.awt.Color(255, 255, 255));
        btn_delete_student.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete_student.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/deletestudent100.png"))); // NOI18N
        btn_delete_student.setToolTipText("");
        btn_delete_student.setBorder(null);
        btn_delete_student.setContentAreaFilled(false);
        btn_delete_student.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_delete_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_studentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deletestud_paneLayout = new javax.swing.GroupLayout(deletestud_pane);
        deletestud_pane.setLayout(deletestud_paneLayout);
        deletestud_paneLayout.setHorizontalGroup(
            deletestud_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_delstudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(deletestud_paneLayout.createSequentialGroup()
                .addComponent(btn_delete_student, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        deletestud_paneLayout.setVerticalGroup(
            deletestud_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletestud_paneLayout.createSequentialGroup()
                .addComponent(btn_delete_student, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_delstudent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        student.add(deletestud_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 50, 151, 144));

        lbl_studrollno.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_studrollno.setText("Search Roll No / Student Name :");
        student.add(lbl_studrollno, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, -1));

        txt_student.setBackground(new Color(0,0,0,0));
        txt_student.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_student.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_student.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_student.setOpaque(false);
        txt_student.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_studentKeyPressed(evt);
            }
        });
        student.add(txt_student, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, 490, -1));

        studentScrollPane.setOpaque(false);

        student_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        student_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Roll No", "Name", "Class", "Date of Admission", "Gender", "Age", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        student_table.setOpaque(false);
        student_table.getTableHeader().setReorderingAllowed(false);
        studentScrollPane.setViewportView(student_table);

        student.add(studentScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 1010, 400));

        btn_refresh_student.setBackground(new java.awt.Color(255, 255, 255));
        btn_refresh_student.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btn_refresh_student.setForeground(new java.awt.Color(51, 204, 0));
        btn_refresh_student.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/refresh30.png"))); // NOI18N
        btn_refresh_student.setText("Refresh Table");
        btn_refresh_student.setToolTipText("");
        btn_refresh_student.setBorder(null);
        btn_refresh_student.setContentAreaFilled(false);
        btn_refresh_student.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh_student.setOpaque(true);
        btn_refresh_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_studentActionPerformed(evt);
            }
        });
        student.add(btn_refresh_student, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 220, 140, 40));

        lbl_subject1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_subject1.setText("Student");
        student.add(lbl_subject1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jlayered_center.add(student, "card6");

        addup_student.setkBorderRadius(0);
        addup_student.setkEndColor(new java.awt.Color(58, 109, 196));
        addup_student.setkGradientFocus(1500);
        addup_student.setkStartColor(new java.awt.Color(255, 255, 255));
        addup_student.setMaximumSize(new java.awt.Dimension(1920, 1080));
        addup_student.setMinimumSize(new java.awt.Dimension(1150, 600));
        addup_student.setPreferredSize(new java.awt.Dimension(1317, 720));

        lbl_addupstud.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        lbl_addupstud.setText("Add / Update Student");

        backtostudent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back100.png"))); // NOI18N
        backtostudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtostudentMousePressed(evt);
            }
        });

        txt_sroll.setBackground(new Color(0,0,0,0));
        txt_sroll.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_sroll.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_sroll.setOpaque(false);

        lbl_sroll.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll.setText("Enter Roll No. :");

        txt_sname.setBackground(new Color(0,0,0,0));
        txt_sname.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_sname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_sname.setOpaque(false);

        lbl_sname.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname.setText("Enter Name :");

        lbl_sclass.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sclass.setText("Select Class :");

        lbl_sdoa.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sdoa.setText("Enter Date of Admission :");

        cb_sclass.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        cb_sclass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "PassOut", "Leave" }));

        txt_sage.setBackground(new Color(0,0,0,0));
        txt_sage.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_sage.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_sage.setOpaque(false);

        lbl_sage.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sage.setText("Enter Age :");

        txt_sphone.setBackground(new Color(0,0,0,0));
        txt_sphone.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_sphone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_sphone.setOpaque(false);

        lbl_sphone.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sphone.setText("Enter Phone no. :");

        btn_student_clear.setBorder(null);
        btn_student_clear.setText("Clear");
        btn_student_clear.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_student_clear.setkEndColor(new java.awt.Color(255, 0, 0));
        btn_student_clear.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_student_clear.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_student_clear.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_student_clear.setkStartColor(new java.awt.Color(255, 0, 0));
        btn_student_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_student_clearActionPerformed(evt);
            }
        });

        btn_student_add.setBorder(null);
        btn_student_add.setText("Add Student");
        btn_student_add.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_student_add.setkEndColor(new java.awt.Color(0, 204, 0));
        btn_student_add.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_student_add.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_student_add.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_student_add.setkStartColor(new java.awt.Color(0, 204, 51));
        btn_student_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_student_addActionPerformed(evt);
            }
        });

        btn_student_update.setBorder(null);
        btn_student_update.setText("Update Student");
        btn_student_update.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_student_update.setkEndColor(new java.awt.Color(0, 204, 255));
        btn_student_update.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_student_update.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_student_update.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_student_update.setkStartColor(new java.awt.Color(0, 204, 255));
        btn_student_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_student_updateActionPerformed(evt);
            }
        });

        lbl_sclass1.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sclass1.setText("Select Gender :");

        gender_rbgrp.add(rb_smale);
        rb_smale.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rb_smale.setText("Male");
        rb_smale.setOpaque(false);

        gender_rbgrp.add(rb_sfemale);
        rb_sfemale.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rb_sfemale.setText("Female");
        rb_sfemale.setOpaque(false);

        javax.swing.GroupLayout addup_studentLayout = new javax.swing.GroupLayout(addup_student);
        addup_student.setLayout(addup_studentLayout);
        addup_studentLayout.setHorizontalGroup(
            addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addup_studentLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(backtostudent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addComponent(btn_student_add, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btn_student_update, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(btn_student_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(lbl_addupstud, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addup_studentLayout.createSequentialGroup()
                                .addComponent(lbl_sname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_sname, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cb_sclass, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(addup_studentLayout.createSequentialGroup()
                                    .addComponent(lbl_sroll)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_sroll, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addComponent(lbl_sclass1)
                        .addGap(18, 18, 18)
                        .addComponent(rb_smale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rb_sfemale))
                    .addComponent(lbl_sclass)
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addComponent(lbl_sage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_sage, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addComponent(lbl_sphone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_sphone, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addComponent(lbl_sdoa)
                        .addGap(18, 18, 18)
                        .addComponent(jdate_sdoa, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(461, Short.MAX_VALUE))
        );
        addup_studentLayout.setVerticalGroup(
            addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addup_studentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addup_studentLayout.createSequentialGroup()
                        .addComponent(lbl_addupstud)
                        .addGap(39, 39, 39)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_sroll, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_sroll, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sclass)
                            .addComponent(cb_sclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sclass1)
                            .addComponent(rb_smale)
                            .addComponent(rb_sfemale))
                        .addGap(36, 36, 36)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_sdoa)
                            .addComponent(jdate_sdoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sage, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sage, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sphone, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_sphone, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(backtostudent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(addup_studentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_student_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_student_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_student_clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jlayered_center.add(addup_student, "card6");

        teacher.setkBorderRadius(0);
        teacher.setkEndColor(new java.awt.Color(58, 109, 196));
        teacher.setkGradientFocus(1500);
        teacher.setkStartColor(new java.awt.Color(255, 255, 255));
        teacher.setMaximumSize(new java.awt.Dimension(1920, 1080));
        teacher.setMinimumSize(new java.awt.Dimension(1150, 600));
        teacher.setPreferredSize(new java.awt.Dimension(1317, 720));
        teacher.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addfaculty_pane.setkBorderRadius(20);
        addfaculty_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        addfaculty_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        addfaculty_pane.setOpaque(false);
        addfaculty_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addfaculty_paneMousePressed(evt);
            }
        });

        lbl_studenticon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/addteacher.png"))); // NOI18N

        lbl_addstudent2.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_addstudent2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_addstudent2.setText("Add Faculty");
        lbl_addstudent2.setToolTipText("");
        lbl_addstudent2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout addfaculty_paneLayout = new javax.swing.GroupLayout(addfaculty_pane);
        addfaculty_pane.setLayout(addfaculty_paneLayout);
        addfaculty_paneLayout.setHorizontalGroup(
            addfaculty_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addfaculty_paneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbl_studenticon2)
                .addContainerGap(28, Short.MAX_VALUE))
            .addComponent(lbl_addstudent2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addfaculty_paneLayout.setVerticalGroup(
            addfaculty_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addfaculty_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_studenticon2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_addstudent2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        teacher.add(addfaculty_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 151, 144));

        updatestud_pane1.setkBorderRadius(20);
        updatestud_pane1.setkEndColor(new java.awt.Color(255, 255, 255));
        updatestud_pane1.setkStartColor(new java.awt.Color(255, 255, 255));
        updatestud_pane1.setOpaque(false);

        lbl_updatestudent1.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_updatestudent1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_updatestudent1.setText("Update Faculty");
        lbl_updatestudent1.setToolTipText("");
        lbl_updatestudent1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        updatefaculty_pane.setBackground(new java.awt.Color(255, 255, 255));
        updatefaculty_pane.setForeground(new java.awt.Color(255, 255, 255));
        updatefaculty_pane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/updateteacher.png"))); // NOI18N
        updatefaculty_pane.setToolTipText("");
        updatefaculty_pane.setBorder(null);
        updatefaculty_pane.setContentAreaFilled(false);
        updatefaculty_pane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updatefaculty_pane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatefaculty_paneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatestud_pane1Layout = new javax.swing.GroupLayout(updatestud_pane1);
        updatestud_pane1.setLayout(updatestud_pane1Layout);
        updatestud_pane1Layout.setHorizontalGroup(
            updatestud_pane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_updatestudent1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(updatestud_pane1Layout.createSequentialGroup()
                .addComponent(updatefaculty_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        updatestud_pane1Layout.setVerticalGroup(
            updatestud_pane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatestud_pane1Layout.createSequentialGroup()
                .addComponent(updatefaculty_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_updatestudent1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        teacher.add(updatestud_pane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 50, 151, 144));

        deletestud_pane1.setkBorderRadius(20);
        deletestud_pane1.setkEndColor(new java.awt.Color(255, 255, 255));
        deletestud_pane1.setkStartColor(new java.awt.Color(255, 255, 255));
        deletestud_pane1.setOpaque(false);

        lbl_delstudent1.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_delstudent1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_delstudent1.setText("Delete Faculty");
        lbl_delstudent1.setToolTipText("");
        lbl_delstudent1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_delete_faculty.setBackground(new java.awt.Color(255, 255, 255));
        btn_delete_faculty.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete_faculty.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/deleteteacher.png"))); // NOI18N
        btn_delete_faculty.setToolTipText("");
        btn_delete_faculty.setBorder(null);
        btn_delete_faculty.setContentAreaFilled(false);
        btn_delete_faculty.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_delete_faculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_facultyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deletestud_pane1Layout = new javax.swing.GroupLayout(deletestud_pane1);
        deletestud_pane1.setLayout(deletestud_pane1Layout);
        deletestud_pane1Layout.setHorizontalGroup(
            deletestud_pane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_delstudent1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deletestud_pane1Layout.createSequentialGroup()
                .addComponent(btn_delete_faculty, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        deletestud_pane1Layout.setVerticalGroup(
            deletestud_pane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletestud_pane1Layout.createSequentialGroup()
                .addComponent(btn_delete_faculty, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_delstudent1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        teacher.add(deletestud_pane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 50, 151, 144));

        lbl_studrollno1.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_studrollno1.setText("Search tid / Faculty Name :");
        teacher.add(lbl_studrollno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, -1));

        txt_teacher.setBackground(new Color(0,0,0,0));
        txt_teacher.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_teacher.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_teacher.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_teacher.setOpaque(false);
        txt_teacher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_teacherKeyPressed(evt);
            }
        });
        teacher.add(txt_teacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, 490, -1));

        studentScrollPane2.setOpaque(false);

        teacher_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        teacher_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "TID", "Name", "Subject", "Qualification", "Date of Join", "Gender", "Age", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        teacher_table.setOpaque(false);
        teacher_table.getTableHeader().setReorderingAllowed(false);
        studentScrollPane2.setViewportView(teacher_table);

        teacher.add(studentScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 1010, 400));

        btn_refresh_teacher.setBackground(new java.awt.Color(255, 255, 255));
        btn_refresh_teacher.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btn_refresh_teacher.setForeground(new java.awt.Color(51, 204, 0));
        btn_refresh_teacher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/refresh30.png"))); // NOI18N
        btn_refresh_teacher.setText("Refresh Table");
        btn_refresh_teacher.setToolTipText("");
        btn_refresh_teacher.setBorder(null);
        btn_refresh_teacher.setContentAreaFilled(false);
        btn_refresh_teacher.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh_teacher.setOpaque(true);
        btn_refresh_teacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_teacherActionPerformed(evt);
            }
        });
        teacher.add(btn_refresh_teacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 220, 140, 40));

        lbl_subject2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_subject2.setText("Teacher");
        teacher.add(lbl_subject2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jlayered_center.add(teacher, "card6");

        addup_teacher.setkBorderRadius(0);
        addup_teacher.setkEndColor(new java.awt.Color(58, 109, 196));
        addup_teacher.setkGradientFocus(1500);
        addup_teacher.setkStartColor(new java.awt.Color(255, 255, 255));
        addup_teacher.setMaximumSize(new java.awt.Dimension(1920, 1080));
        addup_teacher.setMinimumSize(new java.awt.Dimension(1150, 600));
        addup_teacher.setPreferredSize(new java.awt.Dimension(1317, 720));

        lbl_addupstud1.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        lbl_addupstud1.setText("Add / Update Faculty");

        backtoteacher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back100.png"))); // NOI18N
        backtoteacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtoteacherMousePressed(evt);
            }
        });

        txt_tid.setBackground(new Color(0,0,0,0));
        txt_tid.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_tid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_tid.setOpaque(false);

        lbl_sroll1.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll1.setText("Enter Tid :");

        txt_tname.setBackground(new Color(0,0,0,0));
        txt_tname.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_tname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_tname.setOpaque(false);

        lbl_sname1.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname1.setText("Enter Faculty Name :");

        lbl_sdoa1.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sdoa1.setText("Select Date of Join :");

        txt_tage.setBackground(new Color(0,0,0,0));
        txt_tage.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_tage.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_tage.setOpaque(false);

        lbl_sage1.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sage1.setText("Enter Age :");

        txt_tphone.setBackground(new Color(0,0,0,0));
        txt_tphone.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_tphone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_tphone.setOpaque(false);

        lbl_sphone1.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sphone1.setText("Enter Phone no. :");

        btn_teacher_clear.setBorder(null);
        btn_teacher_clear.setText("Clear");
        btn_teacher_clear.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_teacher_clear.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btn_teacher_clear.setkBorderRadius(25);
        btn_teacher_clear.setkEndColor(new java.awt.Color(255, 51, 51));
        btn_teacher_clear.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_teacher_clear.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_teacher_clear.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_teacher_clear.setkStartColor(new java.awt.Color(255, 51, 51));
        btn_teacher_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_teacher_clearActionPerformed(evt);
            }
        });

        btn_teacher_add.setBorder(null);
        btn_teacher_add.setText("Add Faculty");
        btn_teacher_add.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_teacher_add.setkBorderRadius(25);
        btn_teacher_add.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_teacher_add.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_teacher_add.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_teacher_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_teacher_addActionPerformed(evt);
            }
        });

        btn_teacher_update.setBorder(null);
        btn_teacher_update.setText("Update Faculty");
        btn_teacher_update.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_teacher_update.setkBorderRadius(25);
        btn_teacher_update.setkEndColor(new java.awt.Color(0, 255, 255));
        btn_teacher_update.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_teacher_update.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_teacher_update.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_teacher_update.setkStartColor(new java.awt.Color(51, 204, 255));
        btn_teacher_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_teacher_updateActionPerformed(evt);
            }
        });

        lbl_sclass3.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sclass3.setText("Select Gender :");

        gender_rbgrp.add(rb_tmale);
        rb_tmale.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rb_tmale.setText("Male");
        rb_tmale.setOpaque(false);

        gender_rbgrp.add(rb_tfemale);
        rb_tfemale.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rb_tfemale.setText("Female");
        rb_tfemale.setOpaque(false);

        lbl_sname2.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname2.setText("Subject takes:");

        txt_tsubject.setBackground(new Color(0,0,0,0));
        txt_tsubject.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_tsubject.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_tsubject.setOpaque(false);

        lbl_sname3.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname3.setText("Qualifications :");

        txt_tqual.setBackground(new Color(0,0,0,0));
        txt_tqual.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_tqual.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_tqual.setOpaque(false);

        javax.swing.GroupLayout addup_teacherLayout = new javax.swing.GroupLayout(addup_teacher);
        addup_teacher.setLayout(addup_teacherLayout);
        addup_teacherLayout.setHorizontalGroup(
            addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addup_teacherLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(backtoteacher, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(lbl_addupstud1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addComponent(lbl_sage1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_tage, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addComponent(lbl_sclass3)
                        .addGap(18, 18, 18)
                        .addComponent(rb_tmale)
                        .addGap(18, 18, 18)
                        .addComponent(rb_tfemale))
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addComponent(lbl_sdoa1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jdate_tdoj, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addComponent(lbl_sname1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_tname, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addComponent(lbl_sroll1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_tid, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(addup_teacherLayout.createSequentialGroup()
                            .addComponent(lbl_sname3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_tqual, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(addup_teacherLayout.createSequentialGroup()
                            .addComponent(lbl_sname2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_tsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_sphone1)
                            .addComponent(btn_teacher_add, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addup_teacherLayout.createSequentialGroup()
                                .addComponent(btn_teacher_update, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(btn_teacher_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_tphone, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(340, Short.MAX_VALUE))
        );
        addup_teacherLayout.setVerticalGroup(
            addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addup_teacherLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backtoteacher, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addup_teacherLayout.createSequentialGroup()
                        .addComponent(lbl_addupstud1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_tid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_sroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_tname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_tsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sname3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_tqual, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_sdoa1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdate_tdoj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sclass3)
                    .addComponent(rb_tmale)
                    .addComponent(rb_tfemale))
                .addGap(26, 26, 26)
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sage1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_tage, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sphone1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_tphone, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(addup_teacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_teacher_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_teacher_clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_teacher_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jlayered_center.add(addup_teacher, "card6");

        subject.setkBorderRadius(0);
        subject.setkEndColor(new java.awt.Color(58, 109, 196));
        subject.setkGradientFocus(1500);
        subject.setkStartColor(new java.awt.Color(255, 255, 255));
        subject.setMaximumSize(new java.awt.Dimension(1920, 1080));
        subject.setMinimumSize(new java.awt.Dimension(1150, 600));
        subject.setPreferredSize(new java.awt.Dimension(1317, 720));
        subject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_subject.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_subject.setText("Subjects");
        subject.add(lbl_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        addsubject_pane.setkBorderRadius(20);
        addsubject_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        addsubject_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        addsubject_pane.setOpaque(false);
        addsubject_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addsubject_paneMousePressed(evt);
            }
        });

        lbl_subjectico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/AddSubject100px.png"))); // NOI18N

        lbl_addsubject.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_addsubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_addsubject.setText("Add Subject");
        lbl_addsubject.setToolTipText("");
        lbl_addsubject.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout addsubject_paneLayout = new javax.swing.GroupLayout(addsubject_pane);
        addsubject_pane.setLayout(addsubject_paneLayout);
        addsubject_paneLayout.setHorizontalGroup(
            addsubject_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addsubject_paneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbl_subjectico)
                .addContainerGap(28, Short.MAX_VALUE))
            .addComponent(lbl_addsubject, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addsubject_paneLayout.setVerticalGroup(
            addsubject_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addsubject_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_subjectico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_addsubject)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subject.add(addsubject_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 151, 144));

        updatesub_pane.setkBorderRadius(20);
        updatesub_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        updatesub_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        updatesub_pane.setOpaque(false);

        lbl_updatesubject.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_updatesubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_updatesubject.setText("Update Subject");
        lbl_updatesubject.setToolTipText("");
        lbl_updatesubject.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        updatesubject_pane.setBackground(new java.awt.Color(255, 255, 255));
        updatesubject_pane.setForeground(new java.awt.Color(255, 255, 255));
        updatesubject_pane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/UpdateSubject100px.png"))); // NOI18N
        updatesubject_pane.setToolTipText("");
        updatesubject_pane.setBorder(null);
        updatesubject_pane.setContentAreaFilled(false);
        updatesubject_pane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updatesubject_pane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatesubject_paneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatesub_paneLayout = new javax.swing.GroupLayout(updatesub_pane);
        updatesub_pane.setLayout(updatesub_paneLayout);
        updatesub_paneLayout.setHorizontalGroup(
            updatesub_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_updatesubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(updatesub_paneLayout.createSequentialGroup()
                .addComponent(updatesubject_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        updatesub_paneLayout.setVerticalGroup(
            updatesub_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatesub_paneLayout.createSequentialGroup()
                .addComponent(updatesubject_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_updatesubject)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subject.add(updatesub_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 50, 151, 144));

        delsub_pane.setkBorderRadius(20);
        delsub_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        delsub_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        delsub_pane.setOpaque(false);

        lbl_delsubject.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_delsubject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_delsubject.setText("Delete Subject");
        lbl_delsubject.setToolTipText("");
        lbl_delsubject.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        delsubject_pane.setBackground(new java.awt.Color(255, 255, 255));
        delsubject_pane.setForeground(new java.awt.Color(255, 255, 255));
        delsubject_pane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/Deletesubject100px.png"))); // NOI18N
        delsubject_pane.setToolTipText("");
        delsubject_pane.setBorder(null);
        delsubject_pane.setContentAreaFilled(false);
        delsubject_pane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        delsubject_pane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delsubject_paneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout delsub_paneLayout = new javax.swing.GroupLayout(delsub_pane);
        delsub_pane.setLayout(delsub_paneLayout);
        delsub_paneLayout.setHorizontalGroup(
            delsub_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_delsubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, delsub_paneLayout.createSequentialGroup()
                .addComponent(delsubject_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        delsub_paneLayout.setVerticalGroup(
            delsub_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delsub_paneLayout.createSequentialGroup()
                .addComponent(delsubject_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_delsubject)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subject.add(delsub_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 50, 151, 144));

        lbl_studrollno2.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_studrollno2.setText("Search by Class or Medium :");
        subject.add(lbl_studrollno2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));

        txt_subject.setBackground(new Color(0,0,0,0));
        txt_subject.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_subject.setOpaque(false);
        txt_subject.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_subjectKeyPressed(evt);
            }
        });
        subject.add(txt_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 390, -1));

        SubjectScrollPane.setOpaque(false);

        subject_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        subject_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sid", "Class", "Medium", "Subject1", "Subject2", "Subject3", "Subject4", "Subject5", "Subject6", "Subject7", "Subject8"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        subject_table.setOpaque(false);
        subject_table.getTableHeader().setReorderingAllowed(false);
        SubjectScrollPane.setViewportView(subject_table);

        subject.add(SubjectScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 1010, 400));

        btn_refresh_subject.setBackground(new java.awt.Color(255, 255, 255));
        btn_refresh_subject.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btn_refresh_subject.setForeground(new java.awt.Color(51, 204, 0));
        btn_refresh_subject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/refresh30.png"))); // NOI18N
        btn_refresh_subject.setText("Refresh Table");
        btn_refresh_subject.setToolTipText("");
        btn_refresh_subject.setBorder(null);
        btn_refresh_subject.setContentAreaFilled(false);
        btn_refresh_subject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh_subject.setOpaque(true);
        btn_refresh_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_subjectActionPerformed(evt);
            }
        });
        subject.add(btn_refresh_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 220, 140, 40));

        jlayered_center.add(subject, "card6");

        addup_subject.setkBorderRadius(0);
        addup_subject.setkEndColor(new java.awt.Color(58, 109, 196));
        addup_subject.setkGradientFocus(1500);
        addup_subject.setkStartColor(new java.awt.Color(255, 255, 255));
        addup_subject.setMaximumSize(new java.awt.Dimension(1920, 1080));
        addup_subject.setMinimumSize(new java.awt.Dimension(1150, 600));
        addup_subject.setPreferredSize(new java.awt.Dimension(1317, 720));

        lbl_addupstud2.setFont(new java.awt.Font("Arial", 3, 36)); // NOI18N
        lbl_addupstud2.setText("Add / Update Subjects");

        backtosubject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back100.png"))); // NOI18N
        backtosubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtosubjectMousePressed(evt);
            }
        });

        lbl_sroll2.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll2.setText("Subject Name");

        txt_subject1.setBackground(new Color(0,0,0,0));
        txt_subject1.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject1.setOpaque(false);

        lbl_sname4.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname4.setText("1  .");

        btn_sub_clear.setBorder(null);
        btn_sub_clear.setText("Clear");
        btn_sub_clear.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_sub_clear.setkEndColor(new java.awt.Color(255, 0, 0));
        btn_sub_clear.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_sub_clear.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_sub_clear.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_sub_clear.setkStartColor(new java.awt.Color(255, 0, 0));
        btn_sub_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sub_clearActionPerformed(evt);
            }
        });

        btn_sub_add.setBorder(null);
        btn_sub_add.setText("Add Subjects");
        btn_sub_add.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_sub_add.setkEndColor(new java.awt.Color(0, 204, 51));
        btn_sub_add.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_sub_add.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_sub_add.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_sub_add.setkStartColor(new java.awt.Color(0, 204, 0));
        btn_sub_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sub_addActionPerformed(evt);
            }
        });

        btn_sub_update.setBorder(null);
        btn_sub_update.setText("Update Subjects");
        btn_sub_update.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_sub_update.setkEndColor(new java.awt.Color(51, 204, 255));
        btn_sub_update.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_sub_update.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_sub_update.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_sub_update.setkStartColor(new java.awt.Color(51, 204, 255));
        btn_sub_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sub_updateActionPerformed(evt);
            }
        });

        lbl_sname5.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname5.setText("2 .");

        txt_subject2.setBackground(new Color(0,0,0,0));
        txt_subject2.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject2.setOpaque(false);

        lbl_sid.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sid.setText("Enter Sid :");

        txt_subject3.setBackground(new Color(0,0,0,0));
        txt_subject3.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject3.setOpaque(false);

        lbl_sname7.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname7.setText("3 .");

        lbl_sname8.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname8.setText("4 .");

        txt_subject4.setBackground(new Color(0,0,0,0));
        txt_subject4.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject4.setOpaque(false);

        txt_subject5.setBackground(new Color(0,0,0,0));
        txt_subject5.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject5.setOpaque(false);

        lbl_sname9.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname9.setText("5 .");

        lbl_sname10.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname10.setText("6 .");

        txt_subject6.setBackground(new Color(0,0,0,0));
        txt_subject6.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject6.setOpaque(false);

        txt_subject7.setBackground(new Color(0,0,0,0));
        txt_subject7.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject7.setOpaque(false);

        lbl_sname11.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname11.setText("7 .");

        lbl_sname12.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname12.setText("8 .");

        txt_subject8.setBackground(new Color(0,0,0,0));
        txt_subject8.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_subject8.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_subject8.setOpaque(false);

        lbl_sroll4.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll4.setText("Select Medium :");

        cb_subjmedium.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        cb_subjmedium.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Urdu", "Hindi" }));

        cb_subjclass.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        cb_subjclass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        lbl_sroll10.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll10.setText("Select Class :");

        txt_sid.setBackground(new Color(0,0,0,0));
        txt_sid.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_sid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_sid.setOpaque(false);

        lbl_sroll3.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll3.setText("Subject Name");

        javax.swing.GroupLayout addup_subjectLayout = new javax.swing.GroupLayout(addup_subject);
        addup_subject.setLayout(addup_subjectLayout);
        addup_subjectLayout.setHorizontalGroup(
            addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addup_subjectLayout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addup_subjectLayout.createSequentialGroup()
                            .addComponent(lbl_sname7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_subject3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(addup_subjectLayout.createSequentialGroup()
                            .addComponent(lbl_sname4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_subject1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addup_subjectLayout.createSequentialGroup()
                            .addComponent(lbl_sname11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_subject7, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(addup_subjectLayout.createSequentialGroup()
                            .addComponent(lbl_sname9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_subject5, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addup_subjectLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lbl_sname12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_subject8, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_subjectLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lbl_sname5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_subject2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addup_subjectLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addup_subjectLayout.createSequentialGroup()
                                .addComponent(lbl_sname10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_subject6, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addup_subjectLayout.createSequentialGroup()
                                .addComponent(lbl_sname8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_subject4, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)))
                .addGap(0, 463, Short.MAX_VALUE))
            .addGroup(addup_subjectLayout.createSequentialGroup()
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addup_subjectLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(btn_sub_add, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129)
                        .addComponent(btn_sub_update, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(btn_sub_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addup_subjectLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(backtosubject, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(299, 299, 299)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_addupstud2)
                            .addGroup(addup_subjectLayout.createSequentialGroup()
                                .addComponent(lbl_sroll4)
                                .addGap(18, 18, 18)
                                .addComponent(cb_subjmedium, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addup_subjectLayout.createSequentialGroup()
                                .addComponent(lbl_sroll10)
                                .addGap(18, 18, 18)
                                .addComponent(cb_subjclass, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addup_subjectLayout.createSequentialGroup()
                                .addComponent(lbl_sid)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_sid, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(addup_subjectLayout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(lbl_sroll3)
                        .addGap(186, 186, 186)
                        .addComponent(lbl_sroll2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addup_subjectLayout.setVerticalGroup(
            addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addup_subjectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backtosubject, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_addupstud2))
                .addGap(18, 18, 18)
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sid, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_sid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sroll10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_subjclass, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_subjmedium, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_sroll4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_sroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addup_subjectLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subject1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subject3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_sname10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_subject6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_sname9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_subject5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subject7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addup_subjectLayout.createSequentialGroup()
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subject2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subject4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_sname12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subject8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44)
                .addGroup(addup_subjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_sub_clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_sub_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_sub_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(125, 125, 125))
        );

        jlayered_center.add(addup_subject, "card6");

        report.setkBorderRadius(0);
        report.setkEndColor(new java.awt.Color(58, 109, 196));
        report.setkGradientFocus(1500);
        report.setkStartColor(new java.awt.Color(255, 255, 255));
        report.setMaximumSize(new java.awt.Dimension(1920, 1080));
        report.setMinimumSize(new java.awt.Dimension(1150, 600));
        report.setPreferredSize(new java.awt.Dimension(1317, 720));
        report.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_searchname_report.setBackground(new Color(0,0,0,0));
        txt_searchname_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_searchname_report.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_searchname_report.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_searchname_report.setOpaque(false);
        txt_searchname_report.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchname_reportKeyPressed(evt);
            }
        });
        report.add(txt_searchname_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 380, -1));

        studentScrollPane1.setOpaque(false);

        report_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        report_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Roll No", "Name", "Class", "Date of Admission", "Gender", "Age", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        report_table.setOpaque(false);
        report_table.getTableHeader().setReorderingAllowed(false);
        studentScrollPane1.setViewportView(report_table);

        report.add(studentScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 1010, 400));

        lbl_search_rollname.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_search_rollname.setText("Search by Student Roll No / Name :");
        report.add(lbl_search_rollname, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 350, -1));

        cb_reportclass.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        cb_reportclass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "PassOut", "Leave" }));
        cb_reportclass.setSelectedIndex(1);
        cb_reportclass.setBorder(null);
        cb_reportclass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_reportclassActionPerformed(evt);
            }
        });
        report.add(cb_reportclass, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, -1, 30));

        report_rbgrp.add(rb_invoice_report);
        rb_invoice_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        rb_invoice_report.setText("Invoice History");
        rb_invoice_report.setOpaque(false);
        rb_invoice_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_invoice_reportActionPerformed(evt);
            }
        });
        report.add(rb_invoice_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 50, -1, -1));

        report_rbgrp.add(rb_teacher_report);
        rb_teacher_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        rb_teacher_report.setText("Teacher");
        rb_teacher_report.setOpaque(false);
        rb_teacher_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_teacher_reportActionPerformed(evt);
            }
        });
        report.add(rb_teacher_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, -1, -1));

        report_rbgrp.add(rb_student_report);
        rb_student_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        rb_student_report.setSelected(true);
        rb_student_report.setText("Students");
        rb_student_report.setOpaque(false);
        rb_student_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_student_reportActionPerformed(evt);
            }
        });
        report.add(rb_student_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, -1, -1));

        report_rbgrp.add(rb_subject_report);
        rb_subject_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        rb_subject_report.setText("Subject");
        rb_subject_report.setOpaque(false);
        rb_subject_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_subject_reportActionPerformed(evt);
            }
        });
        report.add(rb_subject_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, -1, -1));

        report_rbgrp.add(rb_fees_report);
        rb_fees_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 20)); // NOI18N
        rb_fees_report.setText("Fees");
        rb_fees_report.setOpaque(false);
        rb_fees_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_fees_reportActionPerformed(evt);
            }
        });
        report.add(rb_fees_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 50, -1, -1));

        lbl_selectclass_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_selectclass_report.setText("Select Student Class :");
        report.add(lbl_selectclass_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 230, -1));

        lbl_search_teachername.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_search_teachername.setText("Search by Teacher's Tid / Name :");
        report.add(lbl_search_teachername, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 330, -1));

        cb_report_fees.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        cb_report_fees.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        cb_report_fees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_report_feesActionPerformed(evt);
            }
        });
        report.add(cb_report_fees, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 90, 30));

        txt_searchteacher_report.setBackground(new Color(0,0,0,0));
        txt_searchteacher_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_searchteacher_report.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_searchteacher_report.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_searchteacher_report.setOpaque(false);
        txt_searchteacher_report.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchteacher_reportKeyPressed(evt);
            }
        });
        report.add(txt_searchteacher_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, 400, -1));

        txt_studsearch_fees_report.setBackground(new Color(0,0,0,0));
        txt_studsearch_fees_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_studsearch_fees_report.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_studsearch_fees_report.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_studsearch_fees_report.setOpaque(false);
        txt_studsearch_fees_report.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_studsearch_fees_reportKeyPressed(evt);
            }
        });
        report.add(txt_studsearch_fees_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 400, 30));

        lbl_search_subject.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_search_subject.setText("Search by Class / Medium :");
        report.add(lbl_search_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 280, -1));

        txt_searchsubject_report.setBackground(new Color(0,0,0,0));
        txt_searchsubject_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_searchsubject_report.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_searchsubject_report.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_searchsubject_report.setOpaque(false);
        txt_searchsubject_report.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_searchsubject_reportKeyPressed(evt);
            }
        });
        report.add(txt_searchsubject_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 400, 30));

        lbl_search_inv.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_search_inv.setText("Search by  INV no. / Name :");
        report.add(lbl_search_inv, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 280, -1));

        txt_search_inv.setBackground(new Color(0,0,0,0));
        txt_search_inv.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_search_inv.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_search_inv.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_search_inv.setOpaque(false);
        txt_search_inv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_search_invKeyPressed(evt);
            }
        });
        report.add(txt_search_inv, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 400, -1));

        report_rbgrp.add(rb_advance_invoice_report);
        rb_advance_invoice_report.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rb_advance_invoice_report.setText("Advanced Invoice History");
        rb_advance_invoice_report.setOpaque(false);
        rb_advance_invoice_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_advance_invoice_reportActionPerformed(evt);
            }
        });
        report.add(rb_advance_invoice_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 80, -1, -1));

        lbl_subject3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_subject3.setText("Report");
        report.add(lbl_subject3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        export_excel.setBackground(new java.awt.Color(255, 255, 255));
        export_excel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        export_excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/excel.png"))); // NOI18N
        export_excel.setText("Export to Excel");
        export_excel.setBorder(null);
        export_excel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        export_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                export_excelActionPerformed(evt);
            }
        });
        report.add(export_excel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 170, 190, 50));

        jlayered_center.add(report, "card6");

        fees.setkBorderRadius(0);
        fees.setkEndColor(new java.awt.Color(58, 109, 196));
        fees.setkGradientFocus(1500);
        fees.setkStartColor(new java.awt.Color(255, 255, 255));
        fees.setMaximumSize(new java.awt.Dimension(1920, 1080));
        fees.setMinimumSize(new java.awt.Dimension(1150, 600));
        fees.setPreferredSize(new java.awt.Dimension(1317, 720));

        make_receipt_pane.setkBorderRadius(20);
        make_receipt_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        make_receipt_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        make_receipt_pane.setOpaque(false);
        make_receipt_pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                make_receipt_paneMousePressed(evt);
            }
        });

        lbl_addstudent4.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_addstudent4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_addstudent4.setText("Generate Receipt");
        lbl_addstudent4.setToolTipText("");
        lbl_addstudent4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_pay_feespane.setBackground(new java.awt.Color(255, 255, 255));
        btn_pay_feespane.setForeground(new java.awt.Color(255, 255, 255));
        btn_pay_feespane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/printfee.png"))); // NOI18N
        btn_pay_feespane.setToolTipText("");
        btn_pay_feespane.setBorder(null);
        btn_pay_feespane.setContentAreaFilled(false);
        btn_pay_feespane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_pay_feespane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pay_feespaneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout make_receipt_paneLayout = new javax.swing.GroupLayout(make_receipt_pane);
        make_receipt_pane.setLayout(make_receipt_paneLayout);
        make_receipt_paneLayout.setHorizontalGroup(
            make_receipt_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_addstudent4, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, make_receipt_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_pay_feespane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        make_receipt_paneLayout.setVerticalGroup(
            make_receipt_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(make_receipt_paneLayout.createSequentialGroup()
                .addComponent(btn_pay_feespane, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_addstudent4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add_feedetails_pane.setkBorderRadius(20);
        add_feedetails_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        add_feedetails_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        add_feedetails_pane.setOpaque(false);

        lbl_updatestudent3.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_updatestudent3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_updatestudent3.setText("Add Fee Details");
        lbl_updatestudent3.setToolTipText("");
        lbl_updatestudent3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_add_feesdetail.setBackground(new java.awt.Color(255, 255, 255));
        btn_add_feesdetail.setForeground(new java.awt.Color(255, 255, 255));
        btn_add_feesdetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/addfees100.png"))); // NOI18N
        btn_add_feesdetail.setToolTipText("");
        btn_add_feesdetail.setBorder(null);
        btn_add_feesdetail.setContentAreaFilled(false);
        btn_add_feesdetail.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_add_feesdetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_feesdetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout add_feedetails_paneLayout = new javax.swing.GroupLayout(add_feedetails_pane);
        add_feedetails_pane.setLayout(add_feedetails_paneLayout);
        add_feedetails_paneLayout.setHorizontalGroup(
            add_feedetails_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_feedetails_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_updatestudent3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_feedetails_paneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_add_feesdetail, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        add_feedetails_paneLayout.setVerticalGroup(
            add_feedetails_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_feedetails_paneLayout.createSequentialGroup()
                .addComponent(btn_add_feesdetail, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_updatestudent3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deletefee_pane.setkBorderRadius(20);
        deletefee_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        deletefee_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        deletefee_pane.setOpaque(false);

        lbl_delstudent3.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_delstudent3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_delstudent3.setText("Delete Data");
        lbl_delstudent3.setToolTipText("");
        lbl_delstudent3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_delete_fees.setBackground(new java.awt.Color(255, 255, 255));
        btn_delete_fees.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete_fees.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/deletefees100.png"))); // NOI18N
        btn_delete_fees.setToolTipText("");
        btn_delete_fees.setBorder(null);
        btn_delete_fees.setContentAreaFilled(false);
        btn_delete_fees.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_delete_fees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_feesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deletefee_paneLayout = new javax.swing.GroupLayout(deletefee_pane);
        deletefee_pane.setLayout(deletefee_paneLayout);
        deletefee_paneLayout.setHorizontalGroup(
            deletefee_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_delstudent3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(deletefee_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_delete_fees, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        deletefee_paneLayout.setVerticalGroup(
            deletefee_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletefee_paneLayout.createSequentialGroup()
                .addComponent(btn_delete_fees, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_delstudent3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_studrollno3.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        lbl_studrollno3.setText("Search by Rollno/ Name :");

        txt_fees_rollname.setBackground(new Color(0,0,0,0));
        txt_fees_rollname.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_fees_rollname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_fees_rollname.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_fees_rollname.setOpaque(false);
        txt_fees_rollname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fees_rollnameKeyPressed(evt);
            }
        });

        fees_table_scroll.setOpaque(false);

        fees_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fees_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Rollno", "Name", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "Fees Per Month"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fees_table.setOpaque(false);
        fees_table.getTableHeader().setReorderingAllowed(false);
        fees_table_scroll.setViewportView(fees_table);

        btn_refresh_fees.setBackground(new java.awt.Color(255, 255, 255));
        btn_refresh_fees.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btn_refresh_fees.setForeground(new java.awt.Color(51, 204, 0));
        btn_refresh_fees.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/refresh30.png"))); // NOI18N
        btn_refresh_fees.setText("Refresh Table");
        btn_refresh_fees.setToolTipText("");
        btn_refresh_fees.setBorder(null);
        btn_refresh_fees.setContentAreaFilled(false);
        btn_refresh_fees.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh_fees.setOpaque(true);
        btn_refresh_fees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_feesActionPerformed(evt);
            }
        });

        updatefee_pane.setkBorderRadius(20);
        updatefee_pane.setkEndColor(new java.awt.Color(255, 255, 255));
        updatefee_pane.setkStartColor(new java.awt.Color(255, 255, 255));
        updatefee_pane.setOpaque(false);

        lbl_updatestudent4.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lbl_updatestudent4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_updatestudent4.setText("Update Fee Details");
        lbl_updatestudent4.setToolTipText("");
        lbl_updatestudent4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_update_feespane.setBackground(new java.awt.Color(255, 255, 255));
        btn_update_feespane.setForeground(new java.awt.Color(255, 255, 255));
        btn_update_feespane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/Updatefees100px.png"))); // NOI18N
        btn_update_feespane.setToolTipText("");
        btn_update_feespane.setBorder(null);
        btn_update_feespane.setContentAreaFilled(false);
        btn_update_feespane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_update_feespane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_update_feespaneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatefee_paneLayout = new javax.swing.GroupLayout(updatefee_pane);
        updatefee_pane.setLayout(updatefee_paneLayout);
        updatefee_paneLayout.setHorizontalGroup(
            updatefee_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatefee_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_updatestudent4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatefee_paneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_update_feespane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        updatefee_paneLayout.setVerticalGroup(
            updatefee_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatefee_paneLayout.createSequentialGroup()
                .addComponent(btn_update_feespane, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lbl_updatestudent4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_subject4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_subject4.setText("Fees & Receipt");

        javax.swing.GroupLayout feesLayout = new javax.swing.GroupLayout(fees);
        fees.setLayout(feesLayout);
        feesLayout.setHorizontalGroup(
            feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feesLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(feesLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(add_feedetails_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(updatefee_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(deletefee_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fees_table_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1070, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(217, Short.MAX_VALUE))
            .addGroup(feesLayout.createSequentialGroup()
                .addGroup(feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(make_receipt_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(feesLayout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addComponent(lbl_studrollno3)
                            .addGap(41, 41, 41)
                            .addComponent(txt_fees_rollname, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(70, 70, 70)
                            .addComponent(btn_refresh_fees, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lbl_subject4)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        feesLayout.setVerticalGroup(
            feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(feesLayout.createSequentialGroup()
                .addComponent(lbl_subject4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(feesLayout.createSequentialGroup()
                        .addGroup(feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(make_receipt_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_feedetails_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deletefee_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_refresh_fees, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(feesLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(feesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_studrollno3)
                                    .addComponent(txt_fees_rollname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20)
                        .addComponent(fees_table_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(updatefee_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jlayered_center.add(fees, "card6");

        addup_fees.setkBorderRadius(0);
        addup_fees.setkEndColor(new java.awt.Color(58, 109, 196));
        addup_fees.setkGradientFocus(1500);
        addup_fees.setkStartColor(new java.awt.Color(255, 255, 255));
        addup_fees.setMaximumSize(new java.awt.Dimension(1920, 1080));
        addup_fees.setMinimumSize(new java.awt.Dimension(1150, 600));
        addup_fees.setPreferredSize(new java.awt.Dimension(1317, 720));
        addup_fees.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_addupstud3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbl_addupstud3.setText("Fees");
        addup_fees.add(lbl_addupstud3, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 11, 93, 60));

        backtosubject1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back100.png"))); // NOI18N
        backtosubject1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtosubject1MousePressed(evt);
            }
        });
        addup_fees.add(backtosubject1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 11, 60, 60));

        lbl_sroll5.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll5.setText("Student Name");
        addup_fees.add(lbl_sroll5, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 192, -1, 34));

        txt_famount.setBackground(new Color(0,0,0,0));
        txt_famount.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_famount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_famount.setOpaque(false);
        addup_fees.add(txt_famount, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 469, 147, 33));

        lbl_sname6.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sname6.setText("Amount :");
        addup_fees.add(lbl_sname6, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 468, -1, 33));

        btn_fees_clear.setBorder(null);
        btn_fees_clear.setText("Clear");
        btn_fees_clear.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_fees_clear.setkEndColor(new java.awt.Color(255, 0, 0));
        btn_fees_clear.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_fees_clear.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_fees_clear.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_fees_clear.setkStartColor(new java.awt.Color(255, 0, 0));
        btn_fees_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fees_clearActionPerformed(evt);
            }
        });
        addup_fees.add(btn_fees_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 620, 68, -1));

        btn_make_payment.setBorder(null);
        btn_make_payment.setText("Make Payment");
        btn_make_payment.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_make_payment.setkEndColor(new java.awt.Color(255, 0, 255));
        btn_make_payment.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_make_payment.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_make_payment.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_make_payment.setkStartColor(new java.awt.Color(255, 0, 255));
        btn_make_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_make_paymentActionPerformed(evt);
            }
        });
        addup_fees.add(btn_make_payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 620, 166, -1));

        btn_update_fees.setBorder(null);
        btn_update_fees.setText("Update Details");
        btn_update_fees.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_update_fees.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btn_update_fees.setkEndColor(new java.awt.Color(51, 204, 255));
        btn_update_fees.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_update_fees.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_update_fees.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_update_fees.setkStartColor(new java.awt.Color(51, 204, 255));
        btn_update_fees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_update_feesActionPerformed(evt);
            }
        });
        addup_fees.add(btn_update_fees, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 620, 173, -1));

        txt_fname.setEditable(false);
        txt_fname.setBackground(new Color(0,0,0,0));
        txt_fname.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_fname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_fname.setOpaque(false);
        addup_fees.add(txt_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(218, 194, 265, 33));

        lbl_sroll6.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll6.setText("Select Class :");
        addup_fees.add(lbl_sroll6, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 251, -1, 34));

        lbl_sroll7.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll7.setText("Paid / Not Paid :");
        addup_fees.add(lbl_sroll7, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 430, -1, 34));

        cb_fees_class.setEditable(true);
        cb_fees_class.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        cb_fees_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        cb_fees_class.setBorder(null);
        cb_fees_class.setEnabled(false);
        cb_fees_class.setOpaque(false);
        addup_fees.add(cb_fees_class, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 251, 57, 33));

        lbl_sroll8.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_sroll8.setText("Student Rollno");
        addup_fees.add(lbl_sroll8, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 133, -1, 34));

        txt_froll.setEditable(false);
        txt_froll.setBackground(new Color(0,0,0,0));
        txt_froll.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_froll.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_froll.setOpaque(false);
        addup_fees.add(txt_froll, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 135, 133, 33));

        lbl_selfees_month.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_selfees_month.setText("Select month :");
        addup_fees.add(lbl_selfees_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 309, -1, 34));

        paid_rbgrp.add(rb_notpaid_fees);
        rb_notpaid_fees.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rb_notpaid_fees.setSelected(true);
        rb_notpaid_fees.setText("Not Paid");
        rb_notpaid_fees.setOpaque(false);
        addup_fees.add(rb_notpaid_fees, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 435, -1, -1));

        paid_rbgrp.add(rb_paid_fees);
        rb_paid_fees.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        rb_paid_fees.setText("Paid");
        rb_paid_fees.setOpaque(false);
        addup_fees.add(rb_paid_fees, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 435, -1, -1));

        btn_add_details.setBorder(null);
        btn_add_details.setText("Add Details");
        btn_add_details.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_add_details.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        btn_add_details.setkHoverForeGround(new java.awt.Color(0, 0, 0));
        btn_add_details.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        btn_add_details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_detailsActionPerformed(evt);
            }
        });
        addup_fees.add(btn_add_details, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 620, 133, -1));

        txtarea_receipt.setColumns(20);
        txtarea_receipt.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        txtarea_receipt.setRows(5);
        jScrollPane1.setViewportView(txtarea_receipt);

        addup_fees.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 486, 585));

        jch_jan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_jan.setText("january");
        addup_fees.add(jch_jan, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        jch_feb.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_feb.setText("february");
        addup_fees.add(jch_feb, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, -1, -1));

        txt_ftotal.setBackground(new Color(0,0,0,0));
        txt_ftotal.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        txt_ftotal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txt_ftotal.setOpaque(false);
        addup_fees.add(txt_ftotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(213, 521, 147, 33));

        lbl_total.setFont(new java.awt.Font("Berlin Sans FB", 0, 26)); // NOI18N
        lbl_total.setText("Total Amount :");
        addup_fees.add(lbl_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 520, -1, 33));

        calculate_total_fees.setBackground(new java.awt.Color(255, 255, 255));
        calculate_total_fees.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        calculate_total_fees.setText("Calculate");
        calculate_total_fees.setBorder(null);
        calculate_total_fees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculate_total_feesActionPerformed(evt);
            }
        });
        addup_fees.add(calculate_total_fees, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 515, 80, 40));

        jch_mar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_mar.setText("march");
        addup_fees.add(jch_mar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, -1, -1));

        jch_apr.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_apr.setText("april");
        addup_fees.add(jch_apr, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, -1, -1));

        jch_jun.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_jun.setText("june");
        addup_fees.add(jch_jun, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, -1));

        jch_may.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_may.setText("may");
        addup_fees.add(jch_may, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, -1, -1));

        jch_sep.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_sep.setText("september");
        addup_fees.add(jch_sep, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, -1, -1));

        jch_oct.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_oct.setText("october");
        addup_fees.add(jch_oct, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, -1, -1));

        jch_dec.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_dec.setText("december");
        addup_fees.add(jch_dec, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, -1, -1));

        jch_nov.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_nov.setText("november");
        addup_fees.add(jch_nov, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, -1, -1));

        jch_jul.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_jul.setText("july");
        addup_fees.add(jch_jul, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, -1, -1));

        jch_aug.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jch_aug.setText("august");
        addup_fees.add(jch_aug, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, -1, -1));

        cb_fees_month.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        cb_fees_month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december" }));
        cb_fees_month.setBorder(null);
        addup_fees.add(cb_fees_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, -1, 33));

        btn_print_fee_receipt.setBackground(new java.awt.Color(255, 255, 255));
        btn_print_fee_receipt.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_print_fee_receipt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/main-icon/print.png"))); // NOI18N
        btn_print_fee_receipt.setText("Print Receipt");
        btn_print_fee_receipt.setBorder(null);
        btn_print_fee_receipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_print_fee_receiptActionPerformed(evt);
            }
        });
        addup_fees.add(btn_print_fee_receipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 620, 200, 50));

        jlayered_center.add(addup_fees, "card6");

        getContentPane().add(jlayered_center, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 1349, 747);
    }// </editor-fold>//GEN-END:initComponents
    int x, y;        //declare variable

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        // TODO add your handling code here:
        x = evt.getX();      //to get value for x
        y = evt.getY();      //to get value for y
    }//GEN-LAST:event_headerMousePressed

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        // TODO add your handling code here:
        int xx = evt.getXOnScreen();
        int yy = evt.getYOnScreen();
        this.setLocation(xx - x, yy - y);
    }//GEN-LAST:event_headerMouseDragged

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        System.exit(0);     //for exit jframe
    }//GEN-LAST:event_closeMouseClicked

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        // TODO add your handling code here:
        this.setState(ICONIFIED);       //for minimize jframe
    }//GEN-LAST:event_minMouseClicked

    public void changeimage(JLabel button, String resourcheimg) {            //class for change image label
        ImageIcon aimg = new ImageIcon(getClass().getResource(resourcheimg));
        button.setIcon(aimg);
    }

    private void restoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restoreMouseClicked
        // TODO add your handling code here:
        if (this.getExtendedState() != home.MAXIMIZED_BOTH) {
            this.setExtendedState(home.MAXIMIZED_BOTH);
            changeimage(restore, "/icon/restore.png");
        } else {
            this.setSize(new Dimension(1300, 650));  //custom size for jframe
            changeimage(restore, "/icon/max.png");
        }
    }//GEN-LAST:event_restoreMouseClicked

    private void lp1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lp1MousePressed
        // TODO add your handling code here:
        makeColorVisible(lp1);
        makePanelVisible(dashboard);
    }//GEN-LAST:event_lp1MousePressed

    private void studentpane(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentpane
        // TODO add your handling code here:
        makeColorVisible(lp2);
        makePanelVisible(student);
    }//GEN-LAST:event_studentpane

    private void teacherpane(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teacherpane
        // TODO add your handling code here:
        makeColorVisible(lp3);
        makePanelVisible(teacher);
    }//GEN-LAST:event_teacherpane

    private void subjectpane(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectpane
        // TODO add your handling code here:
        makeColorVisible(lp4);
        makePanelVisible(subject);
    }//GEN-LAST:event_subjectpane

    private void reportpane(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportpane
        // TODO add your handling code here:
        makeColorVisible(lp5);
        makePanelVisible(report);
    }//GEN-LAST:event_reportpane

    private void feespane(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feespane
        // TODO add your handling code here:
        makeColorVisible(lp6);
        makePanelVisible(fees);
    }//GEN-LAST:event_feespane
    /**/
    private void dstudentMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dstudentMousePressed
        // TODO add your handling code here:
        makeColorVisible(lp2);
        makePanelVisible(student);
    }//GEN-LAST:event_dstudentMousePressed

    private void dteacherMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dteacherMousePressed
        // TODO add your handling code here:
        makeColorVisible(lp3);
        makePanelVisible(teacher);
    }//GEN-LAST:event_dteacherMousePressed

    private void dsubjectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dsubjectMousePressed
        // TODO add your handling code here:
        makeColorVisible(lp4);
        makePanelVisible(subject);
    }//GEN-LAST:event_dsubjectMousePressed

    private void dreportMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dreportMousePressed
        // TODO add your handling code here:
        makeColorVisible(lp5);
        makePanelVisible(report);
    }//GEN-LAST:event_dreportMousePressed

    private void dfeesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dfeesMousePressed
        // TODO add your handling code here:
        makeColorVisible(lp6);
        makePanelVisible(fees);
    }//GEN-LAST:event_dfeesMousePressed
    /**/
    public void showstudent_table() {
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from student");
            ResultSet rs = pst.executeQuery();
            student_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void student_clear() {
        txt_sroll.setText("");
        txt_sname.setText("");
        txt_sage.setText("");
        txt_sphone.setText("");
        rb_smale.setSelected(false);
        rb_sfemale.setSelected(false);
        cb_sclass.setSelectedItem("1");
    }

    private void btn_refresh_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_studentActionPerformed
        // TODO add your handling code here:
        showstudent_table();
    }//GEN-LAST:event_btn_refresh_studentActionPerformed

    private void backtostudentMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtostudentMousePressed
        // TODO add your handling code here:
        makePanelVisible(student);
        student_clear();
    }//GEN-LAST:event_backtostudentMousePressed

    private void addstudent_paneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addstudent_paneMousePressed
        // TODO add your handling code here:
        makePanelVisible(addup_student);

    }//GEN-LAST:event_addstudent_paneMousePressed

    private void updatestudent_paneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatestudent_paneActionPerformed
        // TODO add your handling code here:
        try {
            makePanelVisible(addup_student);
            int row = student_table.getSelectedRow();
            String sroll = (student_table.getModel().getValueAt(row, 0)).toString();
            String sql = "select * from student where roll=" + sroll;
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    txt_sroll.setText(rs.getString("roll"));
                    txt_sname.setText(rs.getString("name"));
                    String sclass;
                    sclass = (rs.getString("class"));
                    cb_sclass.setSelectedItem(sclass);
                    String sdoa = (rs.getString("doa"));
                    Date doa = new SimpleDateFormat("yyyy-MM-dd").parse(sdoa);
                    jdate_sdoa.setDate(doa);
                    String gender = (rs.getString("gender"));
                    if (gender.equals("Male")) {
                        rb_smale.setSelected(true);
                    } else if (gender.equals("Female")) {
                        rb_sfemale.setSelected(true);
                    }
                    //JOptionPane.showMessageDialog(null,gender);
                    txt_sage.setText(rs.getString("age"));
                    txt_sphone.setText(rs.getString("phone"));
                }
                rs.close();
                ps.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            } catch (ParseException ex) {
                Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You need to select table row to update student data");
            addup_student.setVisible(false);
            student.setVisible(true);
            System.out.println(e);
        }
    }//GEN-LAST:event_updatestudent_paneActionPerformed

    private void btn_delete_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_studentActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Do You want to Delete Student?");
        if (JOptionPane.YES_OPTION == result) {
            int result2 = JOptionPane.showConfirmDialog(null, "Do You also want to Delete Student fees?");
            try {
                int row = student_table.getSelectedRow();
                String cell = student_table.getModel().getValueAt(row, 0).toString();
                String sql = "delete from student where roll=" + cell;
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Student Data Deleted Successfully");
                    con.close();
                    ps.close();
                    showstudent_table();
                    if (JOptionPane.YES_OPTION == result2) {
                        String sql1 = "delete from fees where rollno=" + cell;
                        try {
                            Connection con1 = conjdbc.getConnection();
                            PreparedStatement ps1 = con1.prepareStatement(sql1);
                            ps1.execute();
                            JOptionPane.showMessageDialog(null, "Student Fees Data Deleted Successfully");
                            con.close();
                            ps.close();
                            showfees_table();
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    }
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                    JOptionPane.showMessageDialog(null, "Deletion Unsuccessfull");
                }
                student_clear();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You need to select table row to delete student data");
                System.out.println(e);
            }
        }

    }//GEN-LAST:event_btn_delete_studentActionPerformed

    private void btn_student_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_student_addActionPerformed
        // TODO add your handling code here:
        try {
            String sql_sgender = null;
            String roll = txt_sroll.getText();
            String name = txt_sname.getText();
            if (!roll.isEmpty() && !name.isEmpty() && !txt_sage.getText().isEmpty() && !txt_sphone.getText().isEmpty()) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement("insert into student values(?,?,?,?,?,?,?)");
                    ps.setString(1, roll);
                    ps.setString(2, name);
                    ps.setString(3, cb_sclass.getSelectedItem().toString());
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String sql_sdoa = sdf.format(jdate_sdoa.getDate());
                    ps.setString(4, sql_sdoa);
                    if (rb_smale.isSelected()) {
                        sql_sgender = "Male";
                    } else if (rb_sfemale.isSelected()) {
                        sql_sgender = "Female";
                    }
                    ps.setString(5, sql_sgender);
                    int sql_sage = Integer.parseInt(txt_sage.getText());
                    ps.setInt(6, sql_sage);
                    ps.setString(7, txt_sphone.getText());
                    int result = ps.executeUpdate();
                    if (result != 0) {
                        System.out.println("Student added successfully");
                        int result2 = JOptionPane.showConfirmDialog(null, "Do You also want to add Student fees?");
                        if (JOptionPane.YES_OPTION == result2) {
                            addstudent_fees();
                        }
                        ps.close();
                        con.close();
                        showstudent_table();
                        student_clear();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Fields are Empty");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please try Again" + ex);
        }
    }//GEN-LAST:event_btn_student_addActionPerformed

    public void addstudent_fees() {
        String cur_fees = "Not Paid";
        String feeamnt = JOptionPane.showInputDialog(this, "Enter Fees per Month :", "FEE", 1);
        int amount = Integer.parseInt(feeamnt);
        String sql2 = "insert into fees values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

        try {
            Connection con1 = conjdbc.getConnection();
            PreparedStatement ps1 = (PreparedStatement) con1.prepareStatement(sql2);
            ps1.setString(1, txt_sroll.getText());
            ps1.setString(2, txt_sname.getText());
            ps1.setString(3, cb_sclass.getSelectedItem().toString());
            ps1.setString(4, cur_fees);
            ps1.setString(5, cur_fees);
            ps1.setString(6, cur_fees);
            ps1.setString(7, cur_fees);
            ps1.setString(8, cur_fees);
            ps1.setString(9, cur_fees);
            ps1.setString(10, cur_fees);
            ps1.setString(11, cur_fees);
            ps1.setString(12, cur_fees);
            ps1.setString(13, cur_fees);
            ps1.setString(14, cur_fees);
            ps1.setString(15, cur_fees);
            ps1.setInt(16, amount);
            int rs1 = ps1.executeUpdate();
            if (rs1 != 0) {
                ps1.close();
                con1.close();
                showfees_table();
                JOptionPane.showMessageDialog(null, "Student Fees Data is Created Succesffuly");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void btn_student_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_student_updateActionPerformed
        // TODO add your handling code here:
        try {
            String sroll = txt_sroll.getText();
            String sname = txt_sname.getText();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String sql_sdoa = sdf.format(jdate_sdoa.getDate());
            String sgender = null;
            int sage = Integer.parseInt(txt_sage.getText());
            String sphone = txt_sphone.getText();
            String sql = "update student set roll=?,name=?,class=?,doa=?,gender=?,age=?,phone=? where roll=" + sroll;

            if (!sroll.isEmpty() && !txt_sname.getText().isEmpty() && !txt_sage.getText().isEmpty() && !txt_sphone.getText().isEmpty()) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                    ps.setString(1, sroll);
                    ps.setString(2, sname);
                    ps.setString(3, cb_sclass.getSelectedItem().toString());
                    ps.setString(4, sql_sdoa);
                    if (rb_smale.isSelected()) {
                        sgender = "Male";
                    } else if (rb_sfemale.isSelected()) {
                        sgender = "Female";
                    }
                    ps.setString(5, sgender);
                    ps.setInt(6, sage);
                    ps.setString(7, sphone);
                    int rs = ps.executeUpdate();
                    if (rs != 0) {
                        JOptionPane.showMessageDialog(null, "Student Data Updated successfully");
                        int result2 = JOptionPane.showConfirmDialog(null, "Do You also want to add Student fees?");
                        if (JOptionPane.YES_OPTION == result2) {
                            String sroll2 = txt_sroll.getText();
                            String sql2 = "update fees set rollno=?,name=?,class=? where rollno=" + sroll2;
                            String sname2 = txt_sname.getText();
                            try {
                                Connection con2 = conjdbc.getConnection();
                                PreparedStatement ps2 = (PreparedStatement) con2.prepareStatement(sql2);
                                ps2.setString(1, sroll2);
                                ps2.setString(2, sname2);
                                ps2.setString(3, cb_sclass.getSelectedItem().toString());
                                int rs2 = ps2.executeUpdate();
                                if (rs2 != 0) {
                                    ps2.close();
                                    con2.close();
                                    showfees_table();
                                } else {
                                    addstudent_fees();
                                }
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                            }
                        }
                        ps.close();
                        con.close();
                        showstudent_table();
                        student_clear();
                    } else {
                        JOptionPane.showMessageDialog(null, "Updation Unsuccessfull");
                    }
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Try Again");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please try Again" + ex);
        }
    }//GEN-LAST:event_btn_student_updateActionPerformed

    private void btn_student_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_student_clearActionPerformed
        // TODO add your handling code here:
        student_clear();
    }//GEN-LAST:event_btn_student_clearActionPerformed

    private void txt_studentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_studentKeyPressed
        // TODO add your handling code here:
        String sroll = txt_student.getText();
        //String sname = txtname_stpane.getText();
        try {
            if (sroll.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String sqlroll = "Select * from student where roll LIKE '%" + sroll + "%'";
                PreparedStatement ps = con.prepareStatement(sqlroll);
                ResultSet rs = ps.executeQuery();
                student_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String sqlname = "Select * from student where name LIKE '%" + sroll + "%'";
                PreparedStatement ps = con.prepareStatement(sqlname);
                ResultSet rs = ps.executeQuery();
                student_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_studentKeyPressed

    public void showteacher_table() {
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from teacher");
            ResultSet rs = pst.executeQuery();
            teacher_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void teacher_clear() {
        txt_tid.setText("");
        txt_tname.setText("");
        txt_tsubject.setText("");
        txt_tqual.setText("");
        txt_tage.setText("");
        txt_tphone.setText("");
    }
    private void addfaculty_paneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addfaculty_paneMousePressed
        // TODO add your handling code here:
        makePanelVisible(addup_teacher);
    }//GEN-LAST:event_addfaculty_paneMousePressed

    private void updatefaculty_paneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatefaculty_paneActionPerformed
        // TODO add your handling code here:
        try {
            makePanelVisible(addup_teacher);

            int row = teacher_table.getSelectedRow();
            String ttid = (teacher_table.getModel().getValueAt(row, 0)).toString();
            String sql = "select * from teacher where tid=" + ttid;
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    txt_tid.setText(rs.getString("tid"));
                    txt_tname.setText(rs.getString("name"));
                    txt_tsubject.setText(rs.getString("subject"));
                    txt_tqual.setText(rs.getString("qualification"));
                    String tdoj = (rs.getString("date_of_join"));
                    Date doj = new SimpleDateFormat("yyyy-MM-dd").parse(tdoj);
                    jdate_tdoj.setDate(doj);
                    String gender = (rs.getString("gender"));
                    if (gender.equals("Male")) {
                        rb_tmale.setSelected(true);
                    } else if (gender.equals("Female")) {
                        rb_tfemale.setSelected(true);
                    }
                    //JOptionPane.showMessageDialog(null,gender);
                    txt_tage.setText(rs.getString("age"));
                    txt_tphone.setText(rs.getString("phone"));
                }
                rs.close();
                ps.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            } catch (ParseException ex) {
                Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You need to select table row to update teacher data");
            addup_teacher.setVisible(false);
            teacher.setVisible(true);
            System.out.println(e);
        }
    }//GEN-LAST:event_updatefaculty_paneActionPerformed

    private void btn_delete_facultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_facultyActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Do You want to Delete Faculty?");
        if (JOptionPane.YES_OPTION == result) {
            try {
                int row = teacher_table.getSelectedRow();
                String cell = teacher_table.getModel().getValueAt(row, 0).toString();
                String sql = "delete from teacher where tid=" + cell;
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Deleted Successfully");
                    con.close();
                    ps.close();
                    showteacher_table();
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                    JOptionPane.showMessageDialog(null, "Deletion Unsuccessfull");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You need to select table row to delete teacher data");
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_btn_delete_facultyActionPerformed

    private void btn_refresh_teacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_teacherActionPerformed
        // TODO add your handling code here:
        showteacher_table();
    }//GEN-LAST:event_btn_refresh_teacherActionPerformed

    private void backtoteacherMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtoteacherMousePressed
        // TODO add your handling code here:
        makePanelVisible(teacher);
        teacher_clear();
    }//GEN-LAST:event_backtoteacherMousePressed

    private void btn_teacher_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_teacher_clearActionPerformed
        // TODO add your handling code here:
        teacher_clear();
    }//GEN-LAST:event_btn_teacher_clearActionPerformed

    private void btn_teacher_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_teacher_addActionPerformed
        // TODO add your handling code here:
        try {
            String tgender = null;
            if (!txt_tid.getText().isEmpty() && !txt_tname.getText().isEmpty() && !txt_tsubject.getText().isEmpty() && !txt_tqual.getText().isEmpty() && !txt_tage.getText().isEmpty() && !txt_tphone.getText().isEmpty()) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement("insert into teacher values(?,?,?,?,?,?,?,?)");
                    ps.setString(1, txt_tid.getText());
                    ps.setString(2, txt_tname.getText());
                    ps.setString(3, txt_tsubject.getText());
                    ps.setString(4, txt_tqual.getText());
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String tdoj = sdf.format(jdate_tdoj.getDate());
                    ps.setString(5, tdoj);
                    if (rb_tmale.isSelected()) {
                        tgender = "Male";
                    } else if (rb_tfemale.isSelected()) {
                        tgender = "Female";
                    }
                    ps.setString(6, tgender);
                    int tage = Integer.parseInt(txt_tage.getText());
                    ps.setInt(7, tage);
                    ps.setString(8, txt_tphone.getText());
                    int result = ps.executeUpdate();
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Teacher Added Successfully");
                        ps.close();
                        con.close();
                        teacher_clear();
                        showteacher_table();
                    }
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null, "Data Insertion Unsuccessful");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Fields are Empty");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please try Again" + ex);
        }
    }//GEN-LAST:event_btn_teacher_addActionPerformed

    private void btn_teacher_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_teacher_updateActionPerformed
        // TODO add your handling code here:
        try {
            String t_tid = txt_tid.getText();
            String tname = txt_tname.getText();
            String tsubject = txt_tsubject.getText();
            String tqual = txt_tqual.getText();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tdoj = sdf.format(jdate_tdoj.getDate());
            String tgender = null;
            int tage = Integer.parseInt(txt_tage.getText());
            String tphone = txt_tphone.getText();
            String sql = "update teacher set tid=?,name=?,subject=?,qualification=?,date_of_join=?,gender=?,age=?,phone=? where tid=" + t_tid;

            if (!t_tid.isEmpty() && !tname.isEmpty() && !tsubject.isEmpty() && !txt_tage.getText().isEmpty() && !tphone.isEmpty()) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                    ps.setString(1, t_tid);
                    ps.setString(2, tname);
                    ps.setString(3, tsubject);
                    ps.setString(4, tqual);
                    ps.setString(5, tdoj);
                    if (rb_tmale.isSelected()) {
                        tgender = "Male";
                    } else if (rb_tfemale.isSelected()) {
                        tgender = "Female";
                    }
                    ps.setString(6, tgender);
                    ps.setInt(7, tage);
                    ps.setString(8, tphone);
                    int rs = ps.executeUpdate();
                    if (rs != 0) {
                        JOptionPane.showMessageDialog(null, "Teacher Data Updated successfully");
                        ps.close();
                        con.close();
                        teacher_clear();
                        showteacher_table();
                    } else {
                        JOptionPane.showMessageDialog(null, "Updation Unsuccessfull");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Field is Empty");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please try Again" + ex);
        }
    }//GEN-LAST:event_btn_teacher_updateActionPerformed

    private void addsubject_paneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addsubject_paneMousePressed
        // TODO add your handling code here:
        makePanelVisible(addup_subject);
        txt_sid.setEnabled(false);
    }//GEN-LAST:event_addsubject_paneMousePressed

    private void updatesubject_paneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatesubject_paneActionPerformed
        // TODO add your handling code here:
        try {
            makePanelVisible(addup_subject);
            txt_sid.setEnabled(true);
            int row = subject_table.getSelectedRow();
            String ssid = (subject_table.getModel().getValueAt(row, 0)).toString();
            String sql = "select * from subject where sid=" + ssid;
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    txt_sid.setText(rs.getString("sid"));
                    String subj_class = (rs.getString("class"));
                    cb_subjclass.setSelectedItem(subj_class);
                    String subj_medium = (rs.getString("medium"));
                    cb_subjmedium.setSelectedItem(subj_medium);
                    txt_subject1.setText(rs.getString("subject1"));
                    txt_subject2.setText(rs.getString("subject2"));
                    txt_subject3.setText(rs.getString("subject3"));
                    txt_subject4.setText(rs.getString("subject4"));
                    txt_subject5.setText(rs.getString("subject5"));
                    txt_subject6.setText(rs.getString("subject6"));
                    txt_subject7.setText(rs.getString("subject7"));
                    txt_subject8.setText(rs.getString("subject8"));
                }
                rs.close();
                ps.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You need to select table row to update subject data");
            addup_subject.setVisible(false);
            subject.setVisible(true);
            System.out.println(e);
        }
    }//GEN-LAST:event_updatesubject_paneActionPerformed

    public void showsubject_table() {
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from subject");
            ResultSet rs = pst.executeQuery();
            subject_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void subject_clear() {
        txt_sid.setText("");
        txt_subject1.setText("");
        txt_subject2.setText("");
        txt_subject3.setText("");
        txt_subject4.setText("");
        txt_subject5.setText("");
        txt_subject6.setText("");
        txt_subject7.setText("");
        txt_subject8.setText("");
    }

    private void delsubject_paneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delsubject_paneActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Do You want to Delete Subject?");
        if (JOptionPane.YES_OPTION == result) {
            try {
                int row = subject_table.getSelectedRow();
                String cell = subject_table.getModel().getValueAt(row, 0).toString();
                String sql = "delete from subject where sid=" + cell;
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Deleted Successfully");
                    con.close();
                    ps.close();
                    showsubject_table();
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                    JOptionPane.showMessageDialog(null, "Deletion Unsuccessfull");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You need to select table row to delete subject");
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_delsubject_paneActionPerformed

    private void btn_refresh_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_subjectActionPerformed
        // TODO add your handling code here:
        showsubject_table();
    }//GEN-LAST:event_btn_refresh_subjectActionPerformed

    private void txt_subjectKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_subjectKeyPressed
        // TODO add your handling code here:
        String txtsub = txt_subject.getText();
        try {
            if (txtsub.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String sql1 = "Select * from subject where class LIKE '%" + txtsub + "%'";
                PreparedStatement ps = con.prepareStatement(sql1);
                ResultSet rs = ps.executeQuery();
                subject_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String sql2 = "Select * from subject where medium LIKE '%" + txtsub + "%'";
                PreparedStatement ps = con.prepareStatement(sql2);
                ResultSet rs = ps.executeQuery();
                subject_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_subjectKeyPressed

    private void backtosubjectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtosubjectMousePressed
        // TODO add your handling code here:
        makePanelVisible(subject);
        subject_clear();
    }//GEN-LAST:event_backtosubjectMousePressed

    private void btn_sub_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sub_clearActionPerformed
        // TODO add your handling code here:
        subject_clear();
    }//GEN-LAST:event_btn_sub_clearActionPerformed

    private void btn_sub_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sub_addActionPerformed
        // TODO add your handling code here:
        try {
            if (!txt_subject1.getText().isEmpty() && !txt_subject2.getText().isEmpty() && !txt_subject3.getText().isEmpty() && !txt_subject4.getText().isEmpty() && !txt_subject5.getText().isEmpty() && !txt_subject6.getText().isEmpty()/* && !txt_subject7.getText().isEmpty() && !txt_sub8.getText().isEmpty()*/) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement("insert into subject (class,medium,subject1,subject2,subject3,subject4,subject5,subject6,subject7,subject8) values(?,?,?,?,?,?,?,?,?,?)");
                    //int s_id = Integer.parseInt(txt_sid.getText());
                    //ps.setInt(1, s_id);
                    ps.setString(1, cb_subjclass.getSelectedItem().toString());
                    ps.setString(2, cb_subjmedium.getSelectedItem().toString());
                    ps.setString(3, txt_subject1.getText());
                    ps.setString(4, txt_subject2.getText());
                    ps.setString(5, txt_subject3.getText());
                    ps.setString(6, txt_subject4.getText());
                    ps.setString(7, txt_subject5.getText());
                    ps.setString(8, txt_subject6.getText());
                    ps.setString(9, txt_subject7.getText());
                    ps.setString(10, txt_subject8.getText());
                    int result = ps.executeUpdate();
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Subject Added Successfully");
                        ps.close();
                        con.close();
                        subject_clear();
                        showsubject_table();
                    }
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null, "Sid should be unique");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Fields are Empty");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please try Again" + ex);
        }
    }//GEN-LAST:event_btn_sub_addActionPerformed

    private void btn_sub_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sub_updateActionPerformed
        // TODO add your handling code here:
        try {
            int s_id = Integer.parseInt(txt_sid.getText());
            String sql = "update subject set class=?,medium=?,subject1=?,subject2=?,subject3=?,subject4=?,subject5=?,subject6=?,subject7=?,subject8=? where sid=" + s_id;
            if (!txt_sid.getText().isEmpty() && !txt_subject1.getText().isEmpty() && !txt_subject2.getText().isEmpty() && !txt_subject3.getText().isEmpty() && !txt_subject4.getText().isEmpty() && !txt_subject5.getText().isEmpty() && !txt_subject6.getText().isEmpty() && !txt_subject7.getText().isEmpty() && !txt_subject8.getText().isEmpty()) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                    ps.setString(1, cb_subjclass.getSelectedItem().toString());
                    ps.setString(2, cb_subjmedium.getSelectedItem().toString());
                    ps.setString(3, txt_subject1.getText());
                    ps.setString(4, txt_subject2.getText());
                    ps.setString(5, txt_subject3.getText());
                    ps.setString(6, txt_subject4.getText());
                    ps.setString(7, txt_subject5.getText());
                    ps.setString(8, txt_subject6.getText());
                    ps.setString(9, txt_subject7.getText());
                    ps.setString(10, txt_subject8.getText());
                    int rs = ps.executeUpdate();
                    if (rs != 0) {
                        JOptionPane.showMessageDialog(null, "Subject Data Updated successfully");
                        ps.close();
                        con.close();
                        subject_clear();
                        showsubject_table();
                    } else {
                        JOptionPane.showMessageDialog(null, "Subject Updation Unsuccessfull");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Field is Empty");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please try Again" + ex);
        }
    }//GEN-LAST:event_btn_sub_updateActionPerformed

    private void make_receipt_paneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_make_receipt_paneMousePressed
        // TODO add your handling code here:
        addup_fees.setVisible(true);
        fees.setVisible(false);
    }//GEN-LAST:event_make_receipt_paneMousePressed

    private void backtosubject1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtosubject1MousePressed
        // TODO add your handling code here:
        addup_fees.setVisible(false);
        fees.setVisible(true);
        fees_clear();
    }//GEN-LAST:event_backtosubject1MousePressed
    //excel start 
    /*
    public void exportDataToExcel() {
        DefaultTableModel model;
        model = (DefaultTableModel) report_table.getModel();
        JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\amaan\\Desktop");
//change location for saving excel file
        excelFileChooser.setDialogTitle("Save As");
//Change Dialog title
//Only filter fules with these extension "xls","xlsx","xlsm"
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);

//Check if save button is clicked
        if (excelChooser == JFileChooser.APPROVE_OPTION) {

            FileOutputStream excelFOU = null;
            BufferedOutputStream excelBOU = null;
            XSSFWorkbook excelJTableExporter = null;
            try {
                //Import excel poi libraries to netbeans
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                // for Loop to get jtable columns and rows
                for (int i = 0; i < model.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);
                        excelCell.setCellValue(model.getValueAt(i, j).toString());
                    }
                }
                //Append xlsx file extenstion to selected files to create unique file names
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            finally {
            try {
                if (excelFOU != null) {
                    excelFOU.close();
                }
                if (excelBOU != null) {
                    excelBOU.close();
                }
                if (excelJTableExporter != null) {
                    excelJTableExporter.close();
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    } 
}*/

    public void showfees_table() {
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from fees");
            ResultSet rs = pst.executeQuery();
            fees_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void fees_clear() {
        txt_froll.setText("");
        txt_fname.setText("");
        cb_fees_class.setSelectedItem("1");
        rb_notpaid_fees.setSelected(true);
        txt_famount.setText("");
        txt_ftotal.setText("");

        jch_jan.setSelected(false);
        jch_feb.setSelected(false);
        jch_mar.setSelected(false);
        jch_apr.setSelected(false);
        jch_may.setSelected(false);
        jch_jun.setSelected(false);
        jch_jul.setSelected(false);
        jch_aug.setSelected(false);
        jch_sep.setSelected(false);
        jch_oct.setSelected(false);
        jch_nov.setSelected(false);
        jch_dec.setSelected(false);
    }

    public void fees_checkbox() {

        jch_jan.setEnabled(true);
        jch_feb.setEnabled(true);
        jch_mar.setEnabled(true);
        jch_apr.setEnabled(true);
        jch_may.setEnabled(true);
        jch_jun.setEnabled(true);
        jch_jul.setEnabled(true);
        jch_aug.setEnabled(true);
        jch_sep.setEnabled(true);
        jch_oct.setEnabled(true);
        jch_nov.setEnabled(true);
        jch_dec.setEnabled(true);
    }
    private void btn_refresh_feesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_feesActionPerformed
        // TODO add your handling code here:
        showfees_table();
    }//GEN-LAST:event_btn_refresh_feesActionPerformed

    private void txt_fees_rollnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fees_rollnameKeyPressed
        // TODO add your handling code here:
        String frollname = txt_fees_rollname.getText();
        try {
            if (frollname.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String froll = "Select * from fees where rollno LIKE '%" + frollname + "%'";
                PreparedStatement ps = con.prepareStatement(froll);
                ResultSet rs = ps.executeQuery();
                fees_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String fname = "Select * from fees where name LIKE '%" + frollname + "%'";
                PreparedStatement ps = con.prepareStatement(fname);
                ResultSet rs = ps.executeQuery();
                fees_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_fees_rollnameKeyPressed

    private void btn_pay_feespaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pay_feespaneActionPerformed
        // TODO add your handling code here:
        try {
            fees_checkbox();
            makePanelVisible(addup_fees);
            lbl_total.setVisible(true);
            txt_ftotal.setVisible(true);
            calculate_total_fees.setVisible(true);
            feesupdate_component();
            cb_fees_month.setVisible(false);

            int row = fees_table.getSelectedRow();
            String s_rol = (fees_table.getModel().getValueAt(row, 0)).toString();
            String sql = "select * from fees where rollno=" + s_rol;
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    txt_froll.setText(rs.getString("rollno"));
                    txt_fname.setText(rs.getString("name"));
                    cb_fees_class.setSelectedItem(rs.getString("class"));
                    txt_famount.setText(rs.getString("fees_per_month"));

                    if (rs.getString("january").equals("Paid")) {
                        jch_jan.setEnabled(false);
                    }
                    if (rs.getString("february").equals("Paid")) {
                        jch_feb.setEnabled(false);
                    }
                    if (rs.getString("march").equals("Paid")) {
                        jch_mar.setEnabled(false);
                    }
                    if (rs.getString("april").equals("Paid")) {
                        jch_apr.setEnabled(false);
                    }
                    if (rs.getString("may").equals("Paid")) {
                        jch_may.setEnabled(false);
                    }
                    if (rs.getString("june").equals("Paid")) {
                        jch_jun.setEnabled(false);
                    }
                    if (rs.getString("july").equals("Paid")) {
                        jch_jul.setEnabled(false);
                    }
                    if (rs.getString("august").equals("Paid")) {
                        jch_aug.setEnabled(false);
                    }
                    if (rs.getString("september").equals("Paid")) {
                        jch_sep.setEnabled(false);
                    }
                    if (rs.getString("october").equals("Paid")) {
                        jch_oct.setEnabled(false);
                    }
                    if (rs.getString("november").equals("Paid")) {
                        jch_nov.setEnabled(false);
                    }
                    if (rs.getString("december").equals("Paid")) {
                        jch_dec.setEnabled(false);
                    }
                }
                rs.close();
                ps.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You need to select table row first to Genrate Receipt");
            addup_fees.setVisible(false);
            fees.setVisible(true);
            System.out.println(e);
        }

    }//GEN-LAST:event_btn_pay_feespaneActionPerformed

    private void btn_add_feesdetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_feesdetailActionPerformed
        // TODO add your handling code here:
        makePanelVisible(addup_fees);
        lbl_total.setVisible(false);
        txt_ftotal.setVisible(false);
        calculate_total_fees.setVisible(false);
        cb_fees_month.setVisible(false);
        lbl_selfees_month.setVisible(false);
        fees_clear();
        feesupdate_compoff();
        fees_checkbox();
        //rb_paid_fees.setEnabled(false);
        //rb_notpaid_fees.setEnabled(false);
        //cb_fees_month.setEnabled(false);
    }//GEN-LAST:event_btn_add_feesdetailActionPerformed

    private void btn_delete_feesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_feesActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Do You want to Delete Student Fees?");
        if (JOptionPane.YES_OPTION == result) {
            try {
                int row = fees_table.getSelectedRow();
                String cell = fees_table.getModel().getValueAt(row, 0).toString();
                String sql = "delete from fees where rollno=" + cell;
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Data Deleted Successfully");
                    con.close();
                    ps.close();
                    showfees_table();
                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                    JOptionPane.showMessageDialog(null, "Deletion Unsuccessfull");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "You need to select table row to delete data");
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_btn_delete_feesActionPerformed

    private void txt_teacherKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_teacherKeyPressed
        // TODO add your handling code he
        String t_tid = txt_teacher.getText();
        try {
            if (t_tid.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String sql1 = "Select * from teacher where tid LIKE '%" + t_tid + "%'";
                PreparedStatement ps = con.prepareStatement(sql1);
                ResultSet rs = ps.executeQuery();
                teacher_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String sql2 = "Select * from teacher where name LIKE '%" + t_tid + "%'";
                PreparedStatement ps = con.prepareStatement(sql2);
                ResultSet rs = ps.executeQuery();
                teacher_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_teacherKeyPressed

    public void pay_fees() {
        String froll = txt_froll.getText();
        String cur_fees = "Paid";
        String sql = "select * from fees where rollno=" + froll;
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                if (jch_jan.isSelected()) {
                    if (!rs.getString("january").equals("Paid")) {
                        String sql1 = "update fees set january=? where rollno=" + froll;
                        try {
                            Connection con1 = conjdbc.getConnection();
                            PreparedStatement ps1 = (PreparedStatement) con1.prepareStatement(sql1);
                            ps1.setString(1, cur_fees);
                            int rs1 = ps1.executeUpdate();
                            if (rs1 != 0) {
                                ps1.close();
                                con1.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_feb.isSelected()) {
                    if (!rs.getString("february").equals("Paid")) {
                        String sql2 = "update fees set february=? where rollno=" + froll;
                        try {
                            Connection con2 = conjdbc.getConnection();
                            PreparedStatement ps2 = (PreparedStatement) con2.prepareStatement(sql2);
                            ps2.setString(1, cur_fees);
                            int rs2 = ps2.executeUpdate();
                            if (rs2 != 0) {
                                ps2.close();
                                con2.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_mar.isSelected()) {
                    if (!rs.getString("march").equals("Paid")) {
                        String sql3 = "update fees set march=? where rollno=" + froll;
                        try {
                            Connection con3 = conjdbc.getConnection();
                            PreparedStatement ps3 = (PreparedStatement) con3.prepareStatement(sql3);
                            ps3.setString(1, cur_fees);
                            int rs3 = ps3.executeUpdate();
                            if (rs3 != 0) {
                                ps3.close();
                                con3.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_apr.isSelected()) {
                    if (!rs.getString("april").equals("Paid")) {
                        String sql4 = "update fees set april=? where rollno=" + froll;
                        try {
                            Connection con4 = conjdbc.getConnection();
                            PreparedStatement ps4 = (PreparedStatement) con4.prepareStatement(sql4);
                            ps4.setString(1, cur_fees);
                            int rs4 = ps4.executeUpdate();
                            if (rs4 != 0) {
                                ps4.close();
                                con4.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_may.isSelected()) {
                    if (!rs.getString("may").equals("Paid")) {
                        String sql5 = "update fees set may=? where rollno=" + froll;
                        try {
                            Connection con5 = conjdbc.getConnection();
                            PreparedStatement ps5 = (PreparedStatement) con5.prepareStatement(sql5);
                            ps5.setString(1, cur_fees);
                            int rs5 = ps5.executeUpdate();
                            if (rs5 != 0) {
                                ps5.close();
                                con5.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_jun.isSelected()) {
                    if (!rs.getString("june").equals("Paid")) {
                        String sql6 = "update fees set june=? where rollno=" + froll;
                        try {
                            Connection con6 = conjdbc.getConnection();
                            PreparedStatement ps6 = (PreparedStatement) con6.prepareStatement(sql6);
                            ps6.setString(1, cur_fees);
                            int rs6 = ps6.executeUpdate();
                            if (rs6 != 0) {
                                ps6.close();
                                con6.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_jul.isSelected()) {
                    if (!rs.getString("july").equals("Paid")) {
                        String sql7 = "update fees set july=? where rollno=" + froll;
                        try {
                            Connection con7 = conjdbc.getConnection();
                            PreparedStatement ps7 = (PreparedStatement) con7.prepareStatement(sql7);
                            ps7.setString(1, cur_fees);
                            int rs7 = ps7.executeUpdate();
                            if (rs7 != 0) {
                                ps7.close();
                                con7.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_aug.isSelected()) {
                    if (!rs.getString("august").equals("Paid")) {
                        String sql8 = "update fees set august=? where rollno=" + froll;
                        try {
                            Connection con8 = conjdbc.getConnection();
                            PreparedStatement ps8 = (PreparedStatement) con8.prepareStatement(sql8);
                            ps8.setString(1, cur_fees);
                            int rs8 = ps8.executeUpdate();
                            if (rs8 != 0) {
                                ps8.close();
                                con8.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_sep.isSelected()) {
                    if (!rs.getString("september").equals("Paid")) {
                        String sql9 = "update fees set september=? where rollno=" + froll;
                        try {
                            Connection con9 = conjdbc.getConnection();
                            PreparedStatement ps9 = (PreparedStatement) con9.prepareStatement(sql9);
                            ps9.setString(1, cur_fees);
                            int rs9 = ps9.executeUpdate();
                            if (rs9 != 0) {
                                ps9.close();
                                con9.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_oct.isSelected()) {
                    if (!rs.getString("october").equals("Paid")) {
                        String sql10 = "update fees set october=? where rollno=" + froll;
                        try {
                            Connection con10 = conjdbc.getConnection();
                            PreparedStatement ps10 = (PreparedStatement) con10.prepareStatement(sql10);
                            ps10.setString(1, cur_fees);
                            int rs10 = ps10.executeUpdate();
                            if (rs10 != 0) {
                                ps10.close();
                                con10.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_nov.isSelected()) {
                    if (!rs.getString("november").equals("Paid")) {
                        String sql11 = "update fees set november=? where rollno=" + froll;
                        try {
                            Connection con11 = conjdbc.getConnection();
                            PreparedStatement ps11 = (PreparedStatement) con11.prepareStatement(sql11);
                            ps11.setString(1, cur_fees);
                            int rs11 = ps11.executeUpdate();
                            if (rs11 != 0) {
                                ps11.close();
                                con11.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                if (jch_dec.isSelected()) {
                    if (!rs.getString("december").equals("Paid")) {
                        String sql12 = "update fees set december=? where rollno=" + froll;
                        try {
                            Connection con12 = conjdbc.getConnection();
                            PreparedStatement ps12 = (PreparedStatement) con12.prepareStatement(sql12);
                            ps12.setString(1, cur_fees);
                            int rs12 = ps12.executeUpdate();
                            if (rs12 != 0) {
                                ps12.close();
                                con12.close();
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                receipt_insert();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            JOptionPane.showMessageDialog(null, "fees is not paid, Try Again");
        }
    }

    public void receipt_insert() {
        /*INVOICE CODE START FROM HERE*/
        String inv = "INV" + new SimpleDateFormat("ddMMyyyyhhmmss").format(new Date());

        String fclass = cb_fees_class.getSelectedItem().toString();
        String sqlinv = "insert into invoice values (?,?,?,?,?)";

        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement ps = (PreparedStatement) con.prepareStatement(sqlinv);
            ps.setString(1, inv);
            ps.setString(2, txt_froll.getText());
            ps.setString(3, txt_fname.getText());
            ps.setString(4, fclass);
            int amount = Integer.parseInt(txt_ftotal.getText());
            ps.setInt(5, amount);

            int rs = ps.executeUpdate();
            if (rs != 0) {
                JOptionPane.showMessageDialog(null, "Receipt Generation successfull");
                ps.close();
                con.close();
                showfees_table();
                receipt_print();
            } else {
                JOptionPane.showMessageDialog(null, "Receipt Generation Unsuccessfull");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            JOptionPane.showMessageDialog(null, "Invoice Genration failed");
        }
    }

    public void receipt_print() {
        /*New Receipt Genration start here CODE START FROM HERE*/
        Date date = new Date();
        int count_paid = 0, count_notpaid = 0;
        String nextinsta = JOptionPane.showInputDialog(this, "Enter Next Installment Date :", "Input", 1);
        String sql3 = "select i.invoiceno,i.class,f.january,f.february,f.march,f.april,f.may,f.june,f.july,f.august,f.september,f.october,f.november,f.december,f.fees_per_month from fees f,invoice i where f.rollno=" + txt_froll.getText();
        try {
            Connection con3 = conjdbc.getConnection();
            PreparedStatement ps3 = (PreparedStatement) con3.prepareStatement(sql3);
            ResultSet rs3 = ps3.executeQuery();
            if (rs3.next()) {
                String invno = (rs3.getString("invoiceno"));
                String rclass = (rs3.getString("class"));
                String jan = (rs3.getString("january"));
                String feb = (rs3.getString("february"));
                String mar = (rs3.getString("march"));
                String apr = (rs3.getString("april"));
                String may = (rs3.getString("may"));
                String jun = (rs3.getString("june"));
                String jul = (rs3.getString("july"));
                String aug = (rs3.getString("august"));
                String sep = (rs3.getString("september"));
                String oct = (rs3.getString("october"));
                String nov = (rs3.getString("november"));
                String dec = (rs3.getString("december"));
                int fee = Integer.parseInt(rs3.getString("fees_per_month"));

                if (jan.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (feb.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (mar.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (apr.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (may.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (jun.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (jul.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (aug.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (sep.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (oct.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (nov.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                if (dec.equals("Paid")) {
                    count_paid += 1;
                } else {
                    count_notpaid += 1;
                }
                txtarea_receipt.setText("********************************************************\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\t\tELITE CLASSES FEE RECEIPT\n\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + " Address : Elite Classes,Jogeshwari(East),Mumbai-400060.\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + " Contact No.: \n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + " Date" + date + "\n Receipt No.:" + invno + "\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "********************************************************");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  STUDENT ROLL NO. : " + txt_froll.getText() + "\tCLASS : " + rclass);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  STUDENT NAME : " + txt_fname.getText());

                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JANUARY :" + jan);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  FEBRUARY :" + feb);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  MARCH :" + mar);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  APRIL :" + apr);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  MAY :" + may);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JUNE :" + jun);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JULY :" + jul);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  AUGUST :" + aug);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  SEPTEMBER :" + sep);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  OCTOBER :" + oct);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  NOVEMBER :" + nov);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  DECEMBER :" + dec);
                //JOptionPane.showMessageDialog(null,"fees per month"+fee+"\ncount fees"+count_paid);
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  FEE AMOUNT : Rs " + fee + "\tCurrent Paid AMOUNT : Rs " + txt_ftotal.getText());
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n\n  Total Fee Paid Rs." + (count_paid * fee) + "\tBalance fees : Rs." + (count_notpaid * fee));
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  Next Installement Date :\t\tSign :\n  " + nextinsta);
            }
            rs3.close();
            ps3.close();
            con3.close();

            txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n\n________________________________________________________\n");
            txtarea_receipt.setText("" + txtarea_receipt.getText() + "    Note: Fees once paid is partially Refundable if\n"
                    + "     student is not satisfied with the teaching of \n\t  ELITE CLASSES or any genuine reason.");
            fees_clear();
        } catch (Exception ex1) {
            JOptionPane.showMessageDialog(null, ex1);
            JOptionPane.showMessageDialog(null, "invoice table fetching data failed");
        }
        /*receipt ends here*/
    }

    private void btn_make_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_make_paymentActionPerformed
        // TODO add your handling code here:
        try {
            pay_fees();//update fees table
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Somethng went Wrong :" + e);
        }
    }//GEN-LAST:event_btn_make_paymentActionPerformed

    private void btn_fees_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fees_clearActionPerformed
        // TODO add your handling code here:
        fees_clear();
        txtarea_receipt.setText("");
    }//GEN-LAST:event_btn_fees_clearActionPerformed

    private void btn_update_feesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_update_feesActionPerformed
        // TODO add your handling code here:
        try {
            String cur_fees = null;
            String s_roll = txt_froll.getText();
            String s_name = txt_fname.getText();
            String fclass = cb_fees_class.getSelectedItem().toString();
            String fmonth = cb_fees_month.getSelectedItem().toString();
            int famount = Integer.parseInt(txt_famount.getText());
            String sql = "update fees set rollno=?,name=?,class=?," + fmonth + "=?,fees_per_month=? where rollno=" + s_roll;
            if (!txt_froll.getText().isEmpty() && !txt_fname.getText().isEmpty() && !txt_famount.getText().isEmpty()) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                    ps.setString(1, s_roll);
                    ps.setString(2, s_name);
                    ps.setString(3, fclass);
                    if (rb_paid_fees.isSelected()) {
                        cur_fees = "Paid";
                    } else if (rb_notpaid_fees.isSelected()) {
                        cur_fees = "Not Paid";
                    }
                    ps.setString(4, cur_fees);
                    ps.setInt(5, famount);
                    int rs = ps.executeUpdate();
                    if (rs != 0) {
                        JOptionPane.showMessageDialog(null, "Fees Details are Updated Successfully");
                        ps.close();
                        con.close();
                        fees_clear();
                        showfees_table();
                    } else {
                        JOptionPane.showMessageDialog(null, "Updattion Unsuccessfull");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Field is Empty");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            JOptionPane.showMessageDialog(null, "Some Details is filled incorrect");
            addup_fees.setVisible(false);
            fees.setVisible(true);
        }
    }//GEN-LAST:event_btn_update_feesActionPerformed

    private void cb_reportclassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_reportclassActionPerformed
        // TODO add your handling code here:
        String stud_class = cb_reportclass.getSelectedItem().toString();
        if (stud_class.equals("all")) {
            String sql = "Select * from student";
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                pst.close();
                rs.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            String sql = "Select * from student where class LIKE '%" + stud_class + "%'";
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                pst.close();
                rs.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_cb_reportclassActionPerformed

    private void rb_teacher_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_teacher_reportActionPerformed
        // TODO add your handling code here:
        lbl_search_subject.setVisible(false);
        lbl_selectclass_report.setVisible(false);
        cb_reportclass.setVisible(false);
        lbl_search_rollname.setVisible(false);

        lbl_search_teachername.setVisible(true);
        txt_searchteacher_report.setVisible(true);
        txt_searchsubject_report.setVisible(false);
        txt_studsearch_fees_report.setVisible(false);
        txt_searchname_report.setVisible(false);
        cb_report_fees.setVisible(false);

        lbl_search_inv.setVisible(false);
        txt_search_inv.setVisible(false);
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from teacher");
            ResultSet rs = pst.executeQuery();
            report_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rb_teacher_reportActionPerformed

    private void rb_student_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_student_reportActionPerformed
        // TODO add your handling code here:
        lbl_selectclass_report.setVisible(true);
        cb_reportclass.setVisible(true);
        lbl_search_rollname.setVisible(true);
        txt_searchname_report.setVisible(true);

        lbl_search_teachername.setVisible(false);
        txt_searchteacher_report.setVisible(false);

        txt_searchsubject_report.setVisible(false);
        lbl_search_subject.setVisible(false);
        txt_studsearch_fees_report.setVisible(false);
        cb_report_fees.setVisible(false);

        lbl_search_inv.setVisible(false);
        txt_search_inv.setVisible(false);
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from student");
            ResultSet rs = pst.executeQuery();
            report_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rb_student_reportActionPerformed

    private void rb_subject_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_subject_reportActionPerformed
        // TODO add your handling code here:
        cb_reportclass.setVisible(false);
        lbl_search_rollname.setVisible(false);
        txt_searchname_report.setVisible(false);

        txt_searchsubject_report.setVisible(true);
        lbl_search_subject.setVisible(true);

        txt_searchteacher_report.setVisible(false);
        lbl_selectclass_report.setVisible(false);
        lbl_search_teachername.setVisible(false);
        txt_studsearch_fees_report.setVisible(false);
        cb_report_fees.setVisible(false);
        lbl_search_rollname.setVisible(false);

        lbl_search_inv.setVisible(false);
        txt_search_inv.setVisible(false);
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from subject");
            ResultSet rs = pst.executeQuery();
            report_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rb_subject_reportActionPerformed

    private void rb_fees_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_fees_reportActionPerformed
        // TODO add your handling code here:
        lbl_search_subject.setVisible(false);
        cb_report_fees.setVisible(true);
        txt_studsearch_fees_report.setVisible(true);
        lbl_selectclass_report.setVisible(true);

        cb_reportclass.setVisible(false);
        lbl_search_rollname.setVisible(true);
        txt_searchsubject_report.setVisible(false);
        lbl_search_teachername.setVisible(false);
        txt_searchteacher_report.setVisible(false);

        lbl_search_inv.setVisible(false);
        txt_search_inv.setVisible(false);
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from fees");
            ResultSet rs = pst.executeQuery();
            report_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rb_fees_reportActionPerformed

    private void rb_invoice_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_invoice_reportActionPerformed
        // TODO add your handling code here:
        lbl_search_subject.setVisible(false);
        lbl_selectclass_report.setVisible(false);
        cb_reportclass.setVisible(false);
        lbl_search_rollname.setVisible(false);

        txt_searchname_report.setVisible(false);
        txt_searchteacher_report.setVisible(false);
        txt_searchsubject_report.setVisible(false);
        txt_studsearch_fees_report.setVisible(false);
        cb_report_fees.setVisible(false);

        lbl_search_inv.setVisible(true);
        txt_search_inv.setVisible(true);
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement("select * from invoice");
            ResultSet rs = pst.executeQuery();
            report_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rb_invoice_reportActionPerformed

    private void cb_report_feesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_report_feesActionPerformed
        // TODO add your handling code here:
        String fees_class = cb_report_fees.getSelectedItem().toString();
        if (fees_class.equals("all")) {
            String sql = "Select * from fees";
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                pst.close();
                rs.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            String sql = "Select * from fees where class LIKE '%" + fees_class + "%'";
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                pst.close();
                rs.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_cb_report_feesActionPerformed

    private void txt_searchname_reportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchname_reportKeyPressed
        // TODO add your handling code here:
        String sroll = txt_searchname_report.getText();
        //String sname = txtname_stpane.getText();
        try {
            if (sroll.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String sqlroll = "Select * from student where roll LIKE '%" + sroll + "%'";
                PreparedStatement ps = con.prepareStatement(sqlroll);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String sqlname = "Select * from student where name LIKE '%" + sroll + "%'";
                PreparedStatement ps = con.prepareStatement(sqlname);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_searchname_reportKeyPressed

    private void txt_searchteacher_reportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchteacher_reportKeyPressed
        // TODO add your handling code here:
        String t_tid = txt_searchteacher_report.getText();
        try {
            if (t_tid.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String sql1 = "Select * from teacher where tid LIKE '%" + t_tid + "%'";
                PreparedStatement ps = con.prepareStatement(sql1);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String sql2 = "Select * from teacher where name LIKE '%" + t_tid + "%'";
                PreparedStatement ps = con.prepareStatement(sql2);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_searchteacher_reportKeyPressed

    private void txt_studsearch_fees_reportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_studsearch_fees_reportKeyPressed
        // TODO add your handling code here:
        String frollname = txt_studsearch_fees_report.getText();
        try {
            if (frollname.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String froll = "Select * from fees where rollno LIKE '%" + frollname + "%'";
                PreparedStatement ps = con.prepareStatement(froll);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String fname = "Select * from fees where name LIKE '%" + frollname + "%'";
                PreparedStatement ps = con.prepareStatement(fname);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_studsearch_fees_reportKeyPressed

    private void txt_searchsubject_reportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchsubject_reportKeyPressed
        // TODO add your handling code here:
        String txtsub = txt_searchsubject_report.getText();
        try {
            if (txtsub.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String sql1 = "Select * from subject where class LIKE '%" + txtsub + "%'";
                PreparedStatement ps = con.prepareStatement(sql1);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String sql2 = "Select * from subject where medium LIKE '%" + txtsub + "%'";
                PreparedStatement ps = con.prepareStatement(sql2);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_searchsubject_reportKeyPressed

    private void txt_search_invKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_search_invKeyPressed
        // TODO add your handling code here:
        String txtinv = txt_search_inv.getText();
        try {
            if (txtinv.matches("^[0-9]+$")) {
                //txtname_stpane.setText("");
                Connection con = conjdbc.getConnection();
                String sql1 = "Select * from invoice where invoiceno LIKE '%" + txtinv + "%'";
                PreparedStatement ps = con.prepareStatement(sql1);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            } else {
                Connection con = conjdbc.getConnection();
                String sql2 = "Select * from invoice where name LIKE '%" + txtinv + "%'";
                PreparedStatement ps = con.prepareStatement(sql2);
                ResultSet rs = ps.executeQuery();
                report_table.setModel(DbUtils.resultSetToTableModel(rs));
                rs.close();
                ps.close();
                con.close();
            }
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_search_invKeyPressed

    private void btn_add_detailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_detailsActionPerformed
        // TODO add your handling code here:
        try {
            String cur_fees = null;
            if (rb_paid_fees.isSelected()) {
                cur_fees = "Paid";
            } else {
                cur_fees = "Not Paid";
            }
            String s_roll = txt_froll.getText();
            String s_name = txt_fname.getText();
            String fclass = cb_fees_class.getSelectedItem().toString();
            int amount = Integer.parseInt(txt_famount.getText());
            String sql = "insert into fees values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            if (!txt_froll.getText().isEmpty() && !txt_fname.getText().isEmpty() && !txt_famount.getText().isEmpty()) {
                try {
                    Connection con = conjdbc.getConnection();
                    PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                    ps.setString(1, s_roll);
                    ps.setString(2, s_name);
                    ps.setString(3, fclass);
                    ps.setString(4, cur_fees);
                    ps.setString(5, cur_fees);
                    ps.setString(6, cur_fees);
                    ps.setString(7, cur_fees);
                    ps.setString(8, cur_fees);
                    ps.setString(9, cur_fees);
                    ps.setString(10, cur_fees);
                    ps.setString(11, cur_fees);
                    ps.setString(12, cur_fees);
                    ps.setString(13, cur_fees);
                    ps.setString(14, cur_fees);
                    ps.setString(15, cur_fees);
                    ps.setInt(16, amount);
                    int rs = ps.executeUpdate();
                    if (rs != 0) {
                        JOptionPane.showMessageDialog(null, "Add Details Successfully");
                        ps.close();
                        con.close();
                        fees_clear();
                        showfees_table();
                    } else {
                        JOptionPane.showMessageDialog(null, "Adding Details Unsuccessfull");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some Field is Empty");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            JOptionPane.showMessageDialog(null, "Some Details is filled incorrect");
        }
    }//GEN-LAST:event_btn_add_detailsActionPerformed

    public void feesupdate_compoff() {
        jch_jan.setVisible(false);
        jch_feb.setVisible(false);
        jch_mar.setVisible(false);
        jch_apr.setVisible(false);
        jch_may.setVisible(false);
        jch_jun.setVisible(false);
        jch_jul.setVisible(false);
        jch_aug.setVisible(false);
        jch_sep.setVisible(false);
        jch_oct.setVisible(false);
        jch_nov.setVisible(false);
        jch_dec.setVisible(false);
    }

    public void feesupdate_component() {
        jch_jan.setVisible(true);
        jch_feb.setVisible(true);
        jch_mar.setVisible(true);
        jch_apr.setVisible(true);
        jch_may.setVisible(true);
        jch_jun.setVisible(true);
        jch_jul.setVisible(true);
        jch_aug.setVisible(true);
        jch_sep.setVisible(true);
        jch_oct.setVisible(true);
        jch_nov.setVisible(true);
        jch_dec.setVisible(true);
    }
    private void btn_update_feespaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_update_feespaneActionPerformed
        // TODO add your handling code here:
        try {
            fees_checkbox();
            makePanelVisible(addup_fees);
            cb_fees_month.setVisible(true);
            lbl_total.setVisible(false);
            lbl_selfees_month.setVisible(true);
            txt_ftotal.setVisible(false);
            calculate_total_fees.setVisible(false);
            feesupdate_compoff();

            int row = fees_table.getSelectedRow();
            String s_rol = (fees_table.getModel().getValueAt(row, 0)).toString();
            String sql = "select * from fees where rollno=" + s_rol;
            try {
                Connection con = conjdbc.getConnection();
                PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    txt_froll.setText(rs.getString("rollno"));
                    txt_fname.setText(rs.getString("name"));
                    cb_fees_class.setSelectedItem(rs.getString("class"));
                    txt_famount.setText(rs.getString("fees_per_month"));
                }
                rs.close();
                ps.close();
                con.close();
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You need to select table row to update data");
            addup_fees.setVisible(false);
            fees.setVisible(true);
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_update_feespaneActionPerformed

    public void calculate_fees() {
        int famount = 0;
        int count_month = 0;
        if (!txt_famount.getText().isEmpty()) {
            famount = Integer.parseInt(txt_famount.getText());
            if (jch_jan.isSelected()) {
                count_month += 1;
            }
            if (jch_feb.isSelected()) {
                count_month += 1;
            }
            if (jch_mar.isSelected()) {
                count_month += 1;
            }
            if (jch_apr.isSelected()) {
                count_month += 1;
            }
            if (jch_may.isSelected()) {
                count_month += 1;
            }
            if (jch_jun.isSelected()) {
                count_month += 1;
            }
            if (jch_jul.isSelected()) {
                count_month += 1;
            }
            if (jch_aug.isSelected()) {
                count_month += 1;
            }
            if (jch_sep.isSelected()) {
                count_month += 1;
            }
            if (jch_oct.isSelected()) {
                count_month += 1;
            }
            if (jch_nov.isSelected()) {
                count_month += 1;
            }
            if (jch_dec.isSelected()) {
                count_month += 1;
            }
            txt_ftotal.setText(String.valueOf(count_month * famount));
        } else {
            JOptionPane.showMessageDialog(null, "Fees Amount is EMpty");
        }
    }

    private void calculate_total_feesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculate_total_feesActionPerformed
        // TODO add your handling code here:
        calculate_fees();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        Date date = new Date();
        String pay = "In Process";
        String sql = "select * from fees where rollno=" + txt_froll.getText();
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement ps = (PreparedStatement) con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                String jan = (rs.getString("january"));
                String feb = (rs.getString("february"));
                String mar = (rs.getString("march"));
                String apr = (rs.getString("april"));
                String may = (rs.getString("may"));
                String jun = (rs.getString("june"));
                String jul = (rs.getString("july"));
                String aug = (rs.getString("august"));
                String sep = (rs.getString("september"));
                String oct = (rs.getString("october"));
                String nov = (rs.getString("november"));
                String dec = (rs.getString("december"));

                txtarea_receipt.setText("********************************************************\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\t\tELITE CLASSES FEE RECEIPT\n\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + " Address : Elite Classes,Jogeshwari(East),Mumbai-400060.\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + " Contact No.: \n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + " Date :" + date + "\n Receipt No.:(InProcess)\t\n");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "********************************************************");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  STUDENT ROLL NO. : " + txt_froll.getText() + "\t\tCLASS : " + cb_fees_class.getSelectedItem().toString());
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  STUDENT NAME : " + txt_fname.getText());
                if (jch_jan.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JANUARY :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JANUARY :" + jan);
                }
                if (jch_feb.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  FEBRUARY :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  FEBRUARY :" + feb);
                }
                if (jch_mar.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  MARCH :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  MARCH :" + mar);
                }
                if (jch_apr.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  APRIL :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  APRIL :" + apr);
                }
                if (jch_may.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  MAY :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  MAY :" + may);
                }
                if (jch_jun.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JUNE :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JUNE :" + jun);
                }
                if (jch_jul.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JULY :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  JULY :" + jul);
                }
                if (jch_aug.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  AUGUST :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  AUGUST :" + aug);
                }
                if (jch_sep.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  SEPTEMBER :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  SEPTEMBER :" + sep);
                }
                if (jch_oct.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  OCTOBER :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  OCTOBER :" + oct);
                }
                if (jch_nov.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  NOVEMBER :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  NOVEMBER :" + nov);
                }
                if (jch_dec.isSelected()) {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  DECEMBER :" + pay);
                } else {
                    txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  DECEMBER :" + dec);
                }
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  FEE AMOUNT : Rs " + txt_famount.getText() + "\tCurrent Paid AMOUNT : Rs " + txt_ftotal.getText());
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n\n  Total Fee Paid Rs.\t\tBalance fees : Rs.");
                txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n  Next Installement Date :\t\tSign :\n  ");
            }
            rs.close();
            ps.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        txtarea_receipt.setText("" + txtarea_receipt.getText() + "\n________________________________________________________\n");
        txtarea_receipt.setText("" + txtarea_receipt.getText() + "    Note: Fees once paid is partially Refundable if\n"
                + "     student is not satisfied with the teaching of \n\t  ELITE CLASSES or any genuine reason.");
    }//GEN-LAST:event_calculate_total_feesActionPerformed

    private void btn_print_fee_receiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_print_fee_receiptActionPerformed
        // TODO add your handling code here:
        try {
            txtarea_receipt.print();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_print_fee_receiptActionPerformed

    private void rb_advance_invoice_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_advance_invoice_reportActionPerformed
        // TODO add your handling code here:
        lbl_search_subject.setVisible(false);
        lbl_selectclass_report.setVisible(false);
        cb_reportclass.setVisible(false);
        lbl_search_rollname.setVisible(false);

        txt_searchname_report.setVisible(false);
        txt_searchteacher_report.setVisible(false);
        txt_searchsubject_report.setVisible(false);
        txt_studsearch_fees_report.setVisible(false);
        cb_report_fees.setVisible(false);

        lbl_search_inv.setVisible(true);
        txt_search_inv.setVisible(true);
        String sql = "select i.*,f.january,f.february,f.march,f.april,f.may,f.june,f.july,f.august,f.september,f.october,f.november,f.december from fees f,invoice i where f.rollno=i.rollno";
        try {
            Connection con = conjdbc.getConnection();
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            report_table.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
            rs.close();
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rb_advance_invoice_reportActionPerformed

    private void log_outMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_log_outMouseClicked
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Do You want to Log Out?");
        if (JOptionPane.YES_OPTION == result) {
            JFrame frame = new login();
            frame.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_log_outMouseClicked

    private void export_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_export_excelActionPerformed
        // TODO add your handling code here:
        if (report_table.getRowCount() > 0) {
            JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Microsoft Excel 97-2003 Worksheet (.xls)", "xls");
            chooser.setFileFilter(filter);
            chooser.setDialogTitle("Save File");
            chooser.setAcceptAllFileFilterUsed(false);
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                List<JTable> tb = new ArrayList<JTable>();
                List<String> nom = new ArrayList<String>();
                tb.add(report_table);
                nom.add("Report");
                String file = chooser.getSelectedFile().toString().concat(".xls");
                try {
                    Exporter e = new Exporter(new File(file), tb, nom);
                    if (e.export()) {
                        JOptionPane.showMessageDialog(null, "The data was exported to excel in the selected directory", "Information Message", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "There was a mistake" + e.getMessage(), " Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "No data to export "," Error message",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_export_excelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane SubjectScrollPane;
    private keeptoo.KGradientPanel add_feedetails_pane;
    private keeptoo.KGradientPanel addfaculty_pane;
    private keeptoo.KGradientPanel addstudent_pane;
    private keeptoo.KGradientPanel addsubject_pane;
    private keeptoo.KGradientPanel addup_fees;
    private keeptoo.KGradientPanel addup_student;
    private keeptoo.KGradientPanel addup_subject;
    private keeptoo.KGradientPanel addup_teacher;
    private javax.swing.JLabel backtostudent;
    private javax.swing.JLabel backtosubject;
    private javax.swing.JLabel backtosubject1;
    private javax.swing.JLabel backtoteacher;
    private keeptoo.KButton btn_add_details;
    private javax.swing.JButton btn_add_feesdetail;
    private javax.swing.JButton btn_delete_faculty;
    private javax.swing.JButton btn_delete_fees;
    private javax.swing.JButton btn_delete_student;
    private keeptoo.KButton btn_fees_clear;
    private keeptoo.KButton btn_make_payment;
    private javax.swing.JButton btn_pay_feespane;
    private javax.swing.JButton btn_print_fee_receipt;
    private javax.swing.JButton btn_refresh_fees;
    private javax.swing.JButton btn_refresh_student;
    private javax.swing.JButton btn_refresh_subject;
    private javax.swing.JButton btn_refresh_teacher;
    private keeptoo.KButton btn_student_add;
    private keeptoo.KButton btn_student_clear;
    private keeptoo.KButton btn_student_update;
    private keeptoo.KButton btn_sub_add;
    private keeptoo.KButton btn_sub_clear;
    private keeptoo.KButton btn_sub_update;
    private keeptoo.KButton btn_teacher_add;
    private keeptoo.KButton btn_teacher_clear;
    private keeptoo.KButton btn_teacher_update;
    private keeptoo.KButton btn_update_fees;
    private javax.swing.JButton btn_update_feespane;
    private javax.swing.JButton calculate_total_fees;
    private javax.swing.JComboBox<String> cb_fees_class;
    private javax.swing.JComboBox<String> cb_fees_month;
    private javax.swing.JComboBox<String> cb_report_fees;
    private javax.swing.JComboBox<String> cb_reportclass;
    private javax.swing.JComboBox<String> cb_sclass;
    private javax.swing.JComboBox<String> cb_subjclass;
    private javax.swing.JComboBox<String> cb_subjmedium;
    private javax.swing.JLabel close;
    private javax.swing.JPanel close_panel;
    private keeptoo.KGradientPanel dashboard;
    private keeptoo.KGradientPanel deletefee_pane;
    private keeptoo.KGradientPanel deletestud_pane;
    private keeptoo.KGradientPanel deletestud_pane1;
    private keeptoo.KGradientPanel delsub_pane;
    private javax.swing.JButton delsubject_pane;
    private keeptoo.KGradientPanel dfees;
    private keeptoo.KGradientPanel dreport;
    private keeptoo.KGradientPanel dstudent;
    private keeptoo.KGradientPanel dsubject;
    private keeptoo.KGradientPanel dteacher;
    private keeptoo.KGradientPanel dtest;
    private javax.swing.JButton export_excel;
    private keeptoo.KGradientPanel fees;
    private javax.swing.JTable fees_table;
    private javax.swing.JScrollPane fees_table_scroll;
    private javax.swing.ButtonGroup gender_rbgrp;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jch_apr;
    private javax.swing.JCheckBox jch_aug;
    private javax.swing.JCheckBox jch_dec;
    private javax.swing.JCheckBox jch_feb;
    private javax.swing.JCheckBox jch_jan;
    private javax.swing.JCheckBox jch_jul;
    private javax.swing.JCheckBox jch_jun;
    private javax.swing.JCheckBox jch_mar;
    private javax.swing.JCheckBox jch_may;
    private javax.swing.JCheckBox jch_nov;
    private javax.swing.JCheckBox jch_oct;
    private javax.swing.JCheckBox jch_sep;
    private org.jdesktop.swingx.JXDatePicker jdate_sdoa;
    private org.jdesktop.swingx.JXDatePicker jdate_tdoj;
    private javax.swing.JLayeredPane jlayered_center;
    private javax.swing.JLabel lbl_addstudent;
    private javax.swing.JLabel lbl_addstudent2;
    private javax.swing.JLabel lbl_addstudent4;
    private javax.swing.JLabel lbl_addsubject;
    private javax.swing.JLabel lbl_addupstud;
    private javax.swing.JLabel lbl_addupstud1;
    private javax.swing.JLabel lbl_addupstud2;
    private javax.swing.JLabel lbl_addupstud3;
    private javax.swing.JLabel lbl_delstudent;
    private javax.swing.JLabel lbl_delstudent1;
    private javax.swing.JLabel lbl_delstudent3;
    private javax.swing.JLabel lbl_delsubject;
    private javax.swing.JLabel lbl_logo;
    private javax.swing.JLabel lbl_sage;
    private javax.swing.JLabel lbl_sage1;
    private javax.swing.JLabel lbl_sclass;
    private javax.swing.JLabel lbl_sclass1;
    private javax.swing.JLabel lbl_sclass3;
    private javax.swing.JLabel lbl_sdoa;
    private javax.swing.JLabel lbl_sdoa1;
    private javax.swing.JLabel lbl_search_inv;
    private javax.swing.JLabel lbl_search_rollname;
    private javax.swing.JLabel lbl_search_subject;
    private javax.swing.JLabel lbl_search_teachername;
    private javax.swing.JLabel lbl_selectclass_report;
    private javax.swing.JLabel lbl_selfees_month;
    private javax.swing.JLabel lbl_sid;
    private javax.swing.JLabel lbl_sname;
    private javax.swing.JLabel lbl_sname1;
    private javax.swing.JLabel lbl_sname10;
    private javax.swing.JLabel lbl_sname11;
    private javax.swing.JLabel lbl_sname12;
    private javax.swing.JLabel lbl_sname2;
    private javax.swing.JLabel lbl_sname3;
    private javax.swing.JLabel lbl_sname4;
    private javax.swing.JLabel lbl_sname5;
    private javax.swing.JLabel lbl_sname6;
    private javax.swing.JLabel lbl_sname7;
    private javax.swing.JLabel lbl_sname8;
    private javax.swing.JLabel lbl_sname9;
    private javax.swing.JLabel lbl_sphone;
    private javax.swing.JLabel lbl_sphone1;
    private javax.swing.JLabel lbl_sroll;
    private javax.swing.JLabel lbl_sroll1;
    private javax.swing.JLabel lbl_sroll10;
    private javax.swing.JLabel lbl_sroll2;
    private javax.swing.JLabel lbl_sroll3;
    private javax.swing.JLabel lbl_sroll4;
    private javax.swing.JLabel lbl_sroll5;
    private javax.swing.JLabel lbl_sroll6;
    private javax.swing.JLabel lbl_sroll7;
    private javax.swing.JLabel lbl_sroll8;
    private javax.swing.JLabel lbl_studenticon;
    private javax.swing.JLabel lbl_studenticon2;
    private javax.swing.JLabel lbl_studrollno;
    private javax.swing.JLabel lbl_studrollno1;
    private javax.swing.JLabel lbl_studrollno2;
    private javax.swing.JLabel lbl_studrollno3;
    private javax.swing.JLabel lbl_subject;
    private javax.swing.JLabel lbl_subject1;
    private javax.swing.JLabel lbl_subject2;
    private javax.swing.JLabel lbl_subject3;
    private javax.swing.JLabel lbl_subject4;
    private javax.swing.JLabel lbl_subjectico;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JLabel lbl_updatestudent;
    private javax.swing.JLabel lbl_updatestudent1;
    private javax.swing.JLabel lbl_updatestudent3;
    private javax.swing.JLabel lbl_updatestudent4;
    private javax.swing.JLabel lbl_updatesubject;
    private keeptoo.KGradientPanel left;
    private javax.swing.JLabel log_out;
    private javax.swing.JPanel lp1;
    private javax.swing.JPanel lp2;
    private javax.swing.JPanel lp3;
    private javax.swing.JPanel lp4;
    private javax.swing.JPanel lp5;
    private javax.swing.JPanel lp6;
    private javax.swing.JPanel lp7;
    private keeptoo.KGradientPanel make_receipt_pane;
    private javax.swing.JLabel min;
    private javax.swing.JPanel one;
    private javax.swing.ButtonGroup paid_rbgrp;
    private javax.swing.JRadioButton rb_advance_invoice_report;
    private javax.swing.JRadioButton rb_fees_report;
    private javax.swing.JRadioButton rb_invoice_report;
    private javax.swing.JRadioButton rb_notpaid_fees;
    private javax.swing.JRadioButton rb_paid_fees;
    private javax.swing.JRadioButton rb_sfemale;
    private javax.swing.JRadioButton rb_smale;
    private javax.swing.JRadioButton rb_student_report;
    private javax.swing.JRadioButton rb_subject_report;
    private javax.swing.JRadioButton rb_teacher_report;
    private javax.swing.JRadioButton rb_tfemale;
    private javax.swing.JRadioButton rb_tmale;
    private keeptoo.KGradientPanel report;
    private javax.swing.ButtonGroup report_rbgrp;
    private javax.swing.JTable report_table;
    private javax.swing.JLabel restore;
    private keeptoo.KGradientPanel student;
    private javax.swing.JScrollPane studentScrollPane;
    private javax.swing.JScrollPane studentScrollPane1;
    private javax.swing.JScrollPane studentScrollPane2;
    private javax.swing.JTable student_table;
    private keeptoo.KGradientPanel subject;
    private javax.swing.JTable subject_table;
    private keeptoo.KGradientPanel teacher;
    private javax.swing.JTable teacher_table;
    private javax.swing.JPanel three;
    private keeptoo.KGradientPanel top;
    private javax.swing.JPanel two;
    private javax.swing.JTextField txt_famount;
    private javax.swing.JTextField txt_fees_rollname;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_froll;
    private javax.swing.JTextField txt_ftotal;
    private javax.swing.JTextField txt_sage;
    private javax.swing.JTextField txt_search_inv;
    private javax.swing.JTextField txt_searchname_report;
    private javax.swing.JTextField txt_searchsubject_report;
    private javax.swing.JTextField txt_searchteacher_report;
    private javax.swing.JTextField txt_sid;
    private javax.swing.JTextField txt_sname;
    private javax.swing.JTextField txt_sphone;
    private javax.swing.JTextField txt_sroll;
    private javax.swing.JTextField txt_student;
    private javax.swing.JTextField txt_studsearch_fees_report;
    private javax.swing.JTextField txt_subject;
    private javax.swing.JTextField txt_subject1;
    private javax.swing.JTextField txt_subject2;
    private javax.swing.JTextField txt_subject3;
    private javax.swing.JTextField txt_subject4;
    private javax.swing.JTextField txt_subject5;
    private javax.swing.JTextField txt_subject6;
    private javax.swing.JTextField txt_subject7;
    private javax.swing.JTextField txt_subject8;
    private javax.swing.JTextField txt_tage;
    private javax.swing.JTextField txt_teacher;
    private javax.swing.JTextField txt_tid;
    private javax.swing.JTextField txt_tname;
    private javax.swing.JTextField txt_tphone;
    private javax.swing.JTextField txt_tqual;
    private javax.swing.JTextField txt_tsubject;
    private javax.swing.JTextArea txtarea_receipt;
    private javax.swing.JButton updatefaculty_pane;
    private keeptoo.KGradientPanel updatefee_pane;
    private keeptoo.KGradientPanel updatestud_pane;
    private keeptoo.KGradientPanel updatestud_pane1;
    private javax.swing.JButton updatestudent_pane;
    private keeptoo.KGradientPanel updatesub_pane;
    private javax.swing.JButton updatesubject_pane;
    // End of variables declaration//GEN-END:variables
}
